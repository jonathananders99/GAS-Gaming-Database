function expansionFormResponseUpdate(){
  errorCheck("expansionFormResponseUpdate","ExpansionFormResponseUpdate");
}//end expansionFormResponseUpdate


function errorCheck(functionName,projectName){
  try{main();}//end 1st try
  catch(error){console.log(error);
    FunctionContainer.discErrorReport(error,functionName,projectName)}//end 1st catch
}//end errorCheck


function main(){
  //Expansion Form Response Sheet
  var efrs = FunctionContainer.tripleTryOpenSheet("","EF Responses");
  var efrslri = FunctionContainer.tripleTryGetLastRow(efrs);
  
  try{var lock = LockService.getScriptLock();lock.waitLock(50000);}catch(lockError){console.log(lockError)};
  
  //vals
  var efrscv = FunctionContainer.tripleTryGetValues(efrs, efrslri, 1, 1, 40)[0];
//  FunctionContainer.positionsInsideArray(efrscv);
  /*
    [Timestamp[0], Email Address[1], Code[2], Operation[3], New Group Name[4], Activate or Deactivate?[5], 
    Operation[6], New Time (in weeks)[7], Member(s) in Question[8], New Cushion Date[9], Desired Profile Pages[10], 
    Things To be Included[11], Which Alert Preference[12], New Value[13], Days[14], Credential Change Operation[15], 
    Old Credential Name[16], New Credential Type[17], New Credential Name[18], Old Training Type Name[19], 
    New Training Type Name[20], New Rank Name[21], New Abbreviated Rank Name[22], Current Discord Nickname[23], 
    Old Gamertag[24], Old Channel Name[25], New Channel Name[26], Group Type Name[27], Code[28], 
    All Forms Included With The Specified Code[29], Member in Question[30], Rank in Question[31], 
    Group in Question[32], Group Type in Question[33], [34], [35], [36], [37], [38], [39]]
  */
  
  
  //Phoenix Member Data Current Members Sheet
  var curVals = FunctionContainer.getpmdcmscv();
  var pmdcms = curVals[0];
  var pmdcmscv = curVals[1];
  curVals = undefined;
  
  
  // Data Lists Lists Sheet
  curVals = FunctionContainer.getdllscv();
  var dlls = curVals[0];
  var dllscv = curVals[1];
  curVals = undefined;
  
  
  //gets perp
  var perpitraitor = FunctionContainer.perpFinder(efrscv[1].toString().trim(),pmdcmscv);
  
  
  //email check
  //sends error if perp is ???
  if(perpitraitor==="???"){//start 2nd if
    FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted an email not in the database", efrslri, dllscv[88][4].toString());
  }//end 2nd if

  
  //trims the necessary values
  var formTrimList = [1, 2, 4, 7, 13, 14, 18, 20, 21, 22, 23, 24, 26, 27];
  for(var i=0; i<formTrimList.length; i+=1){//start 1st for
    
    efrscv[formTrimList[i]] = efrscv[formTrimList[i]].toString().trim();
    
    //if there is any special characters that cannot be used it sends an error message
    if(efrscv[formTrimList[i]].indexOf("^")!==-1){//end 1st if
      FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "included special character ^ (perp will not recieve pm with details because ^ interferes with the bot commands)", efrslri, dllscv[88][4].toString());
    }//end 1st if
    
  }//end 1st for
  
  
  var errorInfo = "";
  
  
  var operation = efrscv[3];
  
  ///*** DATA GATHERING ***///
  
  if(operation === "Group Change"){//start 1st if
    //declares the new name of group if there is one
    var newGroupName = efrscv[4].toString();
    //declares old group name
    var oldGroupName = efrscv[32].toString();
    //declares variable for if they are deactivating the group or not
    var activeOrNah = efrscv[5].toString();
    if(activeOrNah === ""){//start 2nd if
      activeOrNah = "N/A";
    }//end 2nd if
    var errorInfo = "\n\n • Form Operation:** " + operation + "**\n\n • Group in Question:** " 
      + oldGroupName + "**\n\n • New Group Name:** " + newGroupName 
      + "**\n\n • Activate or Deactivate:** " + activeOrNah + "**";
  }//end 1st if
  
  
  else if(operation === "Preference Change"){//start 1st if/else
    var prefOp = efrscv[6];
    //Min Time for Rankup
    if(prefOp === "Min Time for Rankup"){//start 2nd if
      var newTimeToRankup = efrscv[7];
      var rankInQuestion = efrscv[31];
      //finds location of rank
      var rankLoc = -1;
      for(var x=0; x<20; x+=1){//start 1st for
        if(dllscv[24][x].toString() === rankInQuestion){//start 2nd if
          rankLoc = x;
        }//end 2nd if
      }//end 1st for
      var oldTimeToRankup = dllscv[26][rankLoc].toString();
      var errorInfo = "\n\n • Form Operation:** " + operation + "**\n\n • Preference Operation:** " 
        + prefOp + "**\n\n • Rank in Question:** " + rankInQuestion 
        + "**\n\n • New Time (in weeks):** " + newTimeToRankup + "**";
    }//end 2nd if
    
    //Cushion Date
    else if(prefOp === "Cushion Date"){//start 2nd if/else
      var membersInQuestion = efrscv[8];
      var newDate = FunctionContainer.dateReplace(efrscv[9]);
      var errorInfo = "\n\n • Form Operation:** " + operation + "**\n\n • Preference Operation:** " 
        + prefOp + "**\n\n • Member(s) in Question:** " + membersInQuestion 
        + "**\n\n • New Cushion Date:** " + newDate + "**";
    }//end 2nd if/else
    
    //Group Profile Type Inclusion
    else if(prefOp === "Group Profile Type Inclusion"){//start 2nd if/else
      var desiredPages = efrscv[10];
      var groupTypeInQuestion = efrscv[33];
      var errorInfo = "\n\n • Form Operation:** " + operation + "**\n\n • Preference Operation:** " 
        + prefOp + "**\n\n • Group Type in Question:** " + groupTypeInQuestion 
        + "**\n\n • Desired Profile Pages:** " + desiredPages + "**";
      //sheet names
      var profileSheetNames = [["evs","Events"], ["mus","Member Updates"], ["mrs","Member Reports"], 
        ["mds","Reprimands"], ["nms","New Members"], ["mas","Maps"], ["dms","Discharged Members"]];
      var groupTypeCol = -1;
      //gets old sheets
      for(var i=0; i<25; i+=1){//start 1st for
        if(dllscv[60][i].toString() === groupTypeInQuestion){//start 3rd if
          groupTypeCol = i;
          i = 26;
        }//end 3rd if
      }//end 1st for
      var oldProfileSheets = FunctionContainer.splitEmUp(dllscv[65][groupTypeCol].toString());
      var desiredPagesArray = FunctionContainer.splitEmUp(desiredPages);
      for(var i=0; i<desiredPagesArray.length; i+=1){//start 1st for
        for(var x=0; x<profileSheetNames.length; x+=1){//start 2nd for
          if(desiredPagesArray[i].toString() === profileSheetNames[x][1].toString()){//start 1st if
            desiredPagesArray[i] = [profileSheetNames[x][0]];
          }//end 1st if
        }//end 2nd for
      }//end 1st for
    }//end 2nd if/else
    
    //Group Type Leadership Inclusion
    else if(prefOp === "Group Type Leadership Inclusion"){//start 2nd if/else
      var desiredThings = efrscv[11];
      var groupTypeInQuestion = efrscv[33];
      var errorInfo = "\n\n • Form Operation:** " + operation + "**\n\n • Preference Operation:** " 
        + prefOp + "**\n\n • Group Type in Question:** " + groupTypeInQuestion 
        + "**\n\n • Things To be Included:** " + desiredThings + "**";
      var groupTypeCol = -1;
      //gets old sheets
      for(var i=0; i<25; i+=1){//start 1st for
        if(dllscv[60][i].toString() === groupTypeInQuestion){//start 3rd if
          groupTypeCol = i;
          i = 26;
        }//end 3rd if
      }//end 1st for
    }//end 2nd if/else
    
    //Alert Preferences
    else if(prefOp === "Alert Preferences"){//start 2nd if/else
      var alertPref = efrscv[12];
      var newPrefVal = efrscv[13];
      var errorInfo = "\n\n • Form Operation:** " + operation + "**\n\n • Preference Operation:** " 
        + prefOp + "**\n\n • Which Alert Preference:** " + alertPref 
        + "**\n\n • New Value:** " + newPrefVal + "**";
    }//end 2nd if/else
    
    //Days Till Marked as Inactive
    else if(prefOp === "Days Till Marked as Inactive"){//start 2nd if/else
      var days = efrscv[14];
      var errorInfo = "\n\n • Form Operation:** " + operation + "**\n\n • Preference Operation:** " 
        + prefOp + "**\n\n • Days:** " + days + "**";
    }//end 2nd if/else
    
  }//end 1st if/else
  
  
  else if(operation === "Credential Change"){//start 1st if/else
    var credChangeOperation = efrscv[15];
    var oldCredName = efrscv[16];
    var newCredType = efrscv[17];
    var newCredName = efrscv[18];
    var errorInfo = "\n\n • Form Operation:** " + operation + "**\n\n • Credential Change Operation:** " 
      + credChangeOperation + "**\n\n • Old Credential Name:** " + oldCredName + "**\n\n • New Credential Name:** " 
      + newCredName + "**\n\n • New Credential Type:** " + newCredType + "**";
    var credExists = false;
    
    for(var i=16; i<23; i+=2){//start 1st for
      if(dllscv[i][0].toString() === newCredType){//start 1st if
        var newCredRowNum = i;
      }//end 1st if
      for(var x=1; x<100; x+=1){//start 2nd for
        if(oldCredName === dllscv[i][x].toString()){//start 2nd if
          var oldCredType = dllscv[i][0].toString();
          var oldCredColNum = x;
          var oldCredRowNum = i;
        }//end 2nd if
        if(newCredName === dllscv[i][x].toString()){//start 2nd if
          credExists = true;
        }//end 2nd if
      }//end 2nd for
    }//end 1st for
  }//end 1st if/else
  
  
  else if(operation === "Training Types Change"){//start 1st if/else
    var oldTrainingType = efrscv[19];
    var newTrainingType = efrscv[20];
    var errorInfo = "\n\n • Form Operation:** " + operation + "**\n\n • New Training Type:** "
      + newTrainingType + "**\n\n • Old Training Type:** " + oldTrainingType + "**";
  }//end 1st if/else
  
  
  else if(operation === "Rank/Abbreviated Rank Name Change"){//start 1st if/else
    var newRankName = efrscv[21];
    var newRankAbbr = efrscv[22];
    var oldRankName = efrscv[31];
    var errorInfo = "\n\n • Form Operation:** " + operation + "**\n\n • New Rank Name:** "
      + newRankName + "**\n\n • New Abbreviated Rank Name:** " + newRankAbbr
      + "**\n\n • Old Rank Name:** " + oldRankName + "**";
    var newRankNameExists = false;
    var newRankAbbrExists = false;
    for(var i=0; i<20; i+=1){//start 1st for
      if(dllscv[24][i].toString() === newRankName  &&  newRankName !== ""){//start 2nd if
        newRankNameExists = true;
      }//end 2nd if
      if(dllscv[25][i].toString() === newRankAbbr  &&  newRankAbbr !== ""){//start 2nd if
        newRankAbbrExists = true;
      }//end 2nd if
      if(dllscv[24][i].toString() === oldRankName){//start 2nd if
        var oldRankCol = i;
        var oldRankAbbr = dllscv[25][i].toString();
      }//end 2nd if
    }//end 1st for
  }//end 1st if/else
  
  
  else if(operation === "Member Discord Reset"){//start 1st if/else
    var currentDiscName = efrscv[23];
    var memberInQuestion = efrscv[30];
    var errorInfo = "\n\n • Form Operation:** " + operation + "**\n\n • Current Discord Nickname:** "
      + currentDiscName + "**\n\n • Member In Question:** " + memberInQuestion + "**";
  }//end 1st if/else
  
  
  else if(operation === "Member Record Retrieval"){//start 1st if/else
    var oldGt = efrscv[24];
    var memberInQuestion = efrscv[30];
    var errorInfo = "\n\n • Form Operation:** " + operation + "**\n\n • Old Gamertag:** "
      + oldGt + "**\n\n • Member In Question:** " + memberInQuestion + "**";
  }//end 1st if/else
  
  
  else if(operation === "Channel Options Change"){//start 1st if/else
    var oldChannelName = efrscv[25];
    var newChannelName = efrscv[26];
    var errorInfo = "\n\n • Form Operation:** " + operation + "**\n\n • Old Channel Name:** "
      + oldChannelName + "**\n\n • New Channel Name:** " + newChannelName + "**";
  }//end 1st if/else
  
  
  else if(operation === "Group Type Name Change"){//start 1st if/else
    var newGroupTypeName = efrscv[27];
    var oldGroupTypeName = efrscv[33];
    var errorInfo = "\n\n • Form Operation:** " + operation + "**\n\n • Old Group Type Name:** "
      + oldGroupTypeName + "**\n\n • New Group Type Name:** " + newGroupTypeName + "**";
    var typeExists = false;
    for(var i=0; i<25; i+=1){//start 1st for
      if(dllscv[60][i].toString() === newGroupTypeName){//start 1st if
        typeExists = true;
      }//end 1st if
      if(dllscv[60][i].toString() === oldGroupTypeName){//start 1st if
        var groupTypeCol = i;
      }//end 1st if
    }//end 1st for
  }//end 1st if/else
  
  
  else if(operation === "Code Inclusion Change"){//start 1st if/else
    var codeInQuestion = efrscv[28];
    var formsIncluded = efrscv[29];
    var errorInfo = "\n\n • Form Operation:** " + operation + "**\n\n • Code In Question:** "
      + codeInQuestion + "**\n\n • All Forms Included With The Specified Code:** " + formsIncluded + "**";
  }//end 1st if/else
  
  
  
  //** CHECKS AND DATA CHANGING **//
  
  //code check
  if(FunctionContainer.formCodeCheck(dllscv, "ef", efrscv[2].toString())){//start 1st if
    
    
    //date of entry
    var dateOfEntry = FunctionContainer.dateReplace(efrscv[0].toString());
    
    //details
    var details = undefined;
    
    
    //Group Change
    if(operation === "Group Change"){//start 2nd if
        
      //finds group's column in row 41 in dllscv
      var groupCol = "";
      for(var i=0; i<57; i+=1){//start 1st for
        if(dllscv[40][i].toString() === oldGroupName){//start 3rd if
          groupCol = i;
          i = dllscv[40].length;
        }//end 3rd if
      }//end 1st for
      
      
      //new name checks
      if(newGroupName !== ""){//start 3rd if
        
        //sends error if group name is N/A
        if(newGroupName === "N/A"){//start 4th if
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted the group name as __N/A__ in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if
        
        //if length is above 40
        if(newGroupName.length > 40){//start 4th if
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted a group name that is __above 40 characters__ long in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if
        
        //if length is above 40
        if(newGroupName === oldGroupName){//start 4th if
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted a group name that is the __same__ as the group's current name in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if
        
        //if gamertag is the same as any of the group names
        for(var i=0; i<57; i+=1){//start 1st for
          //sends error if group name matches
          if(newGroupName.toString() === dllscv[40][i].toString()  &&  i !== groupCol){//start 4th if
            FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
            FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted a group name __already taken__ by another group in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
            i = 57;
          }//end 4th if
          //sends error if group name contains input
          else if(dllscv[40][i].toString().indexOf(newGroupName.toString()) !== -1  &&  i !== groupCol){//start 4th if
            FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
            FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted a group name that is already __a part__ of an existing group's name in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
            i = 57;
          }//end 4th if
        }//end 1st for
        
        //checks to see if group name is already a gamertag
        for(var i=0; i<pmdcmscv.length; i+=1){//start 1st for
          if(pmdcmscv[i][0].toString() === newGroupName){//start 4th if
            FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
            FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted a group name that is the __same name__ as someone else's __gamertag__ in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
          }//end 4th if
          if(pmdcmscv[i][1].toString() === newGroupName){//start 4th if
            FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
            FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted a group name that is the __same name__ as someone else's __discord nickname__ in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
          }//end 4th if
        }//end 1st for
        
        //sends error if group name has a special character
        if(newGroupName.toString().indexOf(",") !== -1  ||  newGroupName.toString().indexOf("~") !== -1  
          ||  newGroupName === "|"  ||  newGroupName.toString().indexOf("[") !== -1
          ||  newGroupName.toString().indexOf("(") !== -1  ||  newGroupName.toString().indexOf(")") !== -1  
          ||  newGroupName.toString().indexOf("]") !== -1  ||  newGroupName.toString().indexOf("*") !== -1){//start 4th if
            FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
            FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted a group name that contains a __special character__ and is not allowed in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if
        
        //if name doesnt contain the group type
        if(newGroupName.indexOf(dllscv[60][dllscv[53][groupCol]].toString()) === -1){//start 4th if
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted a group name that __doesn't__ contain the __group's type__ in the name in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if
        
      }//end 3rd if
      
      //turns off forms
      FunctionContainer.formTurnOff(["all"], dllscv);
      
      //waits 15 seconds for scripts running to complete
      Utilities.sleep(15000);

      
      //gets all possible disc roles
      var discRoles = FunctionContainer.getAllPossibleDiscRoles(dllscv);
      
      
      //making the details variable to post into
      if(newGroupName === ""){//start 3rd if
        details = "Group Change ~ Old Group Name: "+oldGroupName+" ~ New Group Name: N/A ~ Activation Change: "+activeOrNah;
      }//end 3rd if
      else{details = "Group Change ~ Old Group Name: "+oldGroupName+" ~ New Group Name: "+newGroupName+" ~ Activation Change: "+activeOrNah}
      
      
      
      //set var the correct wording
      if(activeOrNah === "Activate"){//start 3rd if
        activeOrNah = "Active";
      }//end 3rd if
      else if(activeOrNah === "Deactivate"){//start 3rd if
        activeOrNah = "Inactive";
      }//end 3rd if
      
      
      //activating or inactivating a group
      if(activeOrNah !== ""  &&  activeOrNah !== "N/A"){//start 3rd if
        //activate/deactivate
        dllscv[dllscv[51][groupCol]][dllscv[52][groupCol]+1] = activeOrNah;
        FunctionContainer.tripleTrySetSSValuesSingleString(dlls, dllscv[51][groupCol]+1, dllscv[52][groupCol]+2, 1, 1, activeOrNah);
      }//end 3rd if
      
      
      //changes name of group everywhere
      if(newGroupName !== ""){//start 3rd if
        renameGroup(oldGroupName, newGroupName, dlls, dllscv, groupCol, pmdcms, pmdcmscv, discRoles);
      }//end 3rd if
      
    }//end 2nd if
    
    
    //Preference Change
    if(operation === "Preference Change"){//start 2nd if
      
      details = "Preference Change ~ Operation: " + prefOp + " ~ ";
      
      //Min Time for Rankup
      if(prefOp === "Min Time for Rankup"){//start 3rd if
        
        //checks to see if the new time matches old time
        if(oldTimeToRankup === newTimeToRankup){//start 4th if
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted the __same__ time to rank up as the rank already had in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if
        
        //checks to see if the new time is an acceptable answer/time
        if(newTimeToRankup !== "N/A"  &&  parseInt(newTimeToRankup)-parseInt(newTimeToRankup) !== 0){//start 4th if
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted an illegal amount of weeks (can only be N/A or a positive integer 1-99) in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if
        
        //checks to see if the new time isnt too large
        if(parseInt(newTimeToRankup)-parseInt(newTimeToRankup) === 0  &&  newTimeToRankup.length > 2){//start 4th if
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted an illegal amount of weeks (can only be N/A or a positive integer 1-99) in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if
        
        //checks to see if the new time is a verified number
        if(parseInt(newTimeToRankup)-parseInt(newTimeToRankup) === 0){//start 4th if
          if(parseInt(newTimeToRankup)%1 !== 0  ||  parseInt(newTimeToRankup) >= 100  ||  parseInt(newTimeToRankup) <= 0){//start 1st if
            FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted an illegal amount of weeks (can only be N/A or a positive integer 1-99) in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
          }//end 1st if
        }//end 4th if
        
        //turns off forms
        FunctionContainer.formTurnOff(["all"], dllscv);
        
        //waits 15 seconds for scripts running to complete
        Utilities.sleep(15000);
        
        //paste new time and adfd to details for misc hub entry
        FunctionContainer.tripleTrySetSSValuesSingleString(dlls, 27, rankLoc+1, 1, 1, newTimeToRankup);
        details = details + "Rank in Question: " + rankInQuestion + " ~ Old Min Time: " 
          + oldTimeToRankup + " ~ New Min Time: " + newTimeToRankup;
      }//end 3rd if
      
      //Cushion Date
      else if(prefOp === "Cushion Date"){//start 3rd if/else
        //no checks
        
        //turns off forms
        FunctionContainer.formTurnOff(["all"], dllscv);
        
        //waits 15 seconds for scripts running to complete
        Utilities.sleep(15000);
        
        //everyone, not just single people
        if(membersInQuestion.indexOf("Everyone") !== -1){//start 4th if
          details = details + "Member Selection: Everyone ~ New Cushion Date: " + newDate;
          
          //pmdcms first
          //pastes new date
          FunctionContainer.tripleTrySetSSValuesSingleString(pmdcms, 2, 23, pmdcmscv.length, 2, newDate);
          //formats number
          FunctionContainer.tripleTrySetNumberFormat(pmdcms, 2, 24, pmdcmscv.length, 1, "#,##0.00");
          
          //dlls next
          //pastes new date
          FunctionContainer.tripleTrySetSSValuesSingleString(dlls, 78, 1, 1, 2, newDate);
          //formats number
          FunctionContainer.tripleTrySetNumberFormat(dlls, 78, 2, 1, 1, "#,##0.00");
        }//end 4th if
        
        //just single people
        else{//start 4th if/else
          details = details + "Member Selection: " + membersInQuestion + " ~ New Cushion Date: " + newDate;
          
          var curMembers = FunctionContainer.splitEmUp(membersInQuestion);
          
          //cycle thru curMembers
          for(var i=0; i<curMembers.length; i+=1){//start 1st for
            //cycle thru pmdcms
            for(var x=0; x<pmdcmscv.length; x+=1){//start 2nd for
              //if gt matches paste data
              if(curMembers[i].toString() === pmdcmscv[x][0].toString()){//start 1st if
                FunctionContainer.tripleTrySetSSValuesSingleString(pmdcms, x+2, 23, 1, 2, newDate);
              }//end 1st if
            }//end 2nd for
          }//end 1st for
          
          //set number format
          FunctionContainer.tripleTrySetNumberFormat(pmdcms, 2, 24, pmdcmscv.length, 1, "#,##0.00");
        }//end 4th if/else
        
      }//end 3rd if/else
      
      //Group Profile Type Inclusion
      else if(prefOp === "Group Profile Type Inclusion"){//start 3rd if/else
        
        //turns off forms
        FunctionContainer.formTurnOff(["all"], dllscv);
        
        //waits 15 seconds for scripts running to complete
        Utilities.sleep(15000);
        
        //compare two arrays and get ones to be deleted and ones to add
        FunctionContainer.tripleTrySetSSValuesSingleString(dlls, 66, groupTypeCol+1, 1, 1, FunctionContainer.array1LevelIntoString(desiredPagesArray));
        details = details + "Old group type profile sheet inclusion set: " + FunctionContainer.array1LevelIntoString(oldProfileSheets) + " ~ New group type profile sheet inclusion set: " + FunctionContainer.array1LevelIntoString(desiredPagesArray);
      }//end 3rd if/else
      
      //Group Type Leadership Inclusion
      else if(prefOp === "Group Type Leadership Inclusion"){//start 3rd if/else
        
        //turns off forms
        FunctionContainer.formTurnOff(["all"], dllscv);
        
        //waits 15 seconds for scripts running to complete
        Utilities.sleep(15000);
        
        //compare two arrays and get ones to be deleted and ones to add
        FunctionContainer.tripleTrySetSSValuesSingleString(dlls, 62, groupTypeCol+1, 1, 1, desiredThings);
        details = details + "Old group type leadership inclusion: " + dllscv[61][groupTypeCol].toString() + " ~ New group type leadership inclusion: " + desiredThings;
      }//end 3rd if/else
      
      //Alert Preferences
      else if(prefOp === "Alert Preferences"){//start 3rd if/else
        details = details + "Alert Preference: " + alertPref + " ~ New Value: " + newPrefVal + " ~ Old Value: ";
        
        //turns off forms
        FunctionContainer.formTurnOff(["all"], dllscv);
        
        //waits 15 seconds for scripts running to complete
        Utilities.sleep(15000);
        
        //finds correct row and column to paste new data into
        if(alertPref === "Min Time For Event Alerts"){//start 4th if
          FunctionContainer.tripleTrySetSSValuesSingleString(dlls, 79, 1, 1, 1, newPrefVal);
          details = details + dllscv[78][0].toString();
        }//end 4th if
        else if(alertPref === "Max Time For Event Alerts"){//start 4th if/else
          FunctionContainer.tripleTrySetSSValuesSingleString(dlls, 79, 2, 1, 1, newPrefVal);
          details = details + dllscv[78][1].toString();
        }//end 4th if/else
        else if(alertPref === "Max Events Per Day For Alerts"){//start 4th if/else
          FunctionContainer.tripleTrySetSSValuesSingleString(dlls, 79, 3, 1, 1, newPrefVal);
          details = details + dllscv[78][2].toString();
        }//end 4th if/else
        else if(alertPref === "Event Alert Inclusion By Days"){//start 4th if/else
          FunctionContainer.tripleTrySetSSValuesSingleString(dlls, 79, 4, 1, 1, newPrefVal);
          details = details + dllscv[78][3].toString();
        }//end 4th if/else
        else if(alertPref === "Attendee Number Alert"){//start 4th if/else
          FunctionContainer.tripleTrySetSSValuesSingleString(dlls, 79, 5, 1, 1, newPrefVal);
          details = details + dllscv[78][4].toString();
        }//end 4th if/else
        
      }//end 3rd if/else
      
      //Days Till Marked as Inactive
      else if(prefOp === "Days Till Marked as Inactive"){//start 3rd if/else
        
        //turns off forms
        FunctionContainer.formTurnOff(["all"], dllscv);
        
        //waits 15 seconds for scripts running to complete
        Utilities.sleep(15000);
        
        details = details + "Old Number of Days: " + dllscv[79][0].toString() + " ~ New Number of Days: " + days;
        FunctionContainer.tripleTrySetSSValuesSingleString(dlls, 80, 1, 1, 1, days);
      }//end 3rd if/else
      
    }//end 2nd if
    
    
    //Credential Change
    if(operation === "Credential Change"){//start 2nd if
      details = "Credential Change ~ Change Operation: " + credChangeOperation;
      
      //illegal input
      if(oldCredName === "N/A"  &&  newCredName === "N/A"){//start 3rd if
        FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
        FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted new and old credential as N/A in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
      }//end 3rd if
      
      if(credChangeOperation === "Name Change"){//start 3rd if
        
        //if names are the same
        if(oldCredName === newCredName){//start 4th if
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted new and old credential as the same name in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if
        
        //name is N/A for either one
        if(oldCredName === "N/A"  ||  newCredName === "N/A"){//start 4th if
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted old or new credential as N/A and while trying to change a credentials name in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if
        
        //if cred already exists with that same name
        if(credExists){//start 4th if
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "tried to change a credentials name to an already existing credential in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if
        
        //sends error if cred has a special character
        if(newCredName.toString().indexOf(",") !== -1  ||  newCredName.toString().indexOf("~") !== -1  ||  newCredName.toString().indexOf("]") !== -1
          ||  newCredName === ""  ||  newCredName.toString().indexOf("[") !== -1
          ||  newCredName.toString().indexOf("(") !== -1  ||  newCredName.toString().indexOf(")") !== -1  
          ||  newCredName.toString().indexOf("*") !== -1){//start 4th if
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "tried to change a credential's name to a name with illegal special characters in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if
        
        //if length is above 40
        if(newCredName.length > 40){//start 4th if
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "tried to change a credential's name to a name longer than 40 characters in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if
        
        //turns off forms
//        FunctionContainer.formTurnOff(["all"], dllscv);
        
        //waits 15 seconds for scripts running to complete
//        Utilities.sleep(15000);
        
        
        details = details + " ~ Old Name: " + oldCredName + " ~ New Name: " + newCredName;
        
        
        //changes cred's name in all dlls locations
        dllscv[oldCredRowNum][oldCredColNum] = newCredName;
        
        for(var i=0; i<100; i+=1){//start 1st for
          if(dllscv[33][i].toString() === oldCredName){//start 4th if
            dllscv[33][i] = newCredName;
          }//end 4th if
        }//end 1st for
        
        for(var i=0; i<25; i+=1){//start 1st for
          curVals = FunctionContainer.splitEmUp(dllscv[61][i]);
          for(var x=0; x<curVals.length; x+=1){//start 2nd for
            if(curVals[x].toString() === oldCredName){//start 1st if
              curVals[x] = newCredName;
            }//end 1st if
          }//end 2nd for
          dllscv[61][i] = FunctionContainer.array1LevelIntoString(curVals);
        }//end 1st for
        
        var curRows = [34, 35, 94];
        for(var i=0; i<curRows.length; i+=1){//start 1st for
          var curCreds = FunctionContainer.splitEmUp(dllscv[curRows[i]][0]);
          var newCreds = [];
          for(var x=0; x<curCreds.length; x+=1){//start 2nd for
            if(curCreds[x].toString() === oldCredName){//start 4th if
              newCreds.push([newCredName]);
            }//end 4th if
            else{newCreds.push([curCreds[x].toString()])}
          }//end 2nd for
          dllscv[curRows[i]][0] = FunctionContainer.array1LevelIntoString(newCreds);
        }//end 1st for
        
        //paste new data in dlls
        FunctionContainer.tripleTrySetSSValues(dlls, 1, 1, dllscv.length, dllscv[0].length, dllscv);
        
        
        //changes it in pmdcms and pmddms
        for(var i=0; i<pmdcmscv.length; i+=1){//start 1st for
          var curCreds = FunctionContainer.splitEmUp(pmdcmscv[i][4]);
          var newCreds = [];
          for(var x=0; x<curCreds.length; x+=1){//start 2nd for
            if(curCreds[x].toString() === oldCredName){//start 4th if
              newCreds.push([newCredName]);
            }//end 4th if
            else if(curCreds[x].toString() === oldCredName + " U/I"){//start 4th if/else
              newCreds.push([newCredName + " U/I"]);
            }//end 4th if/else
            else{newCreds.push([curCreds[x].toString()])}
          }//end 2nd for
          pmdcmscv[i][4] = FunctionContainer.array1LevelIntoString(newCreds);
        }//end 1st for
        //paste new data in pmdcms
        FunctionContainer.tripleTrySetSSValues(pmdcms, 2, 1, pmdcmscv.length, pmdcmscv[0].length, pmdcmscv);
        
        //Phoenix Member Data Discharged Members Sheet
        var curVals = FunctionContainer.getpmddmscv();
        var pmddms = curVals[0];
        var pmddmscv = curVals[1];
        var pmddmslri = curVals[2];
        curVals = undefined;
        for(var i=0; i<pmddmscv.length; i+=1){//start 1st for
          var curCreds = FunctionContainer.splitEmUp(pmddmscv[i][4]);
          var newCreds = [];
          for(var x=0; x<curCreds.length; x+=1){//start 2nd for
            if(curCreds[x].toString() === oldCredName){//start 4th if
              newCreds.push([newCredName]);
            }//end 4th if
            else if(curCreds[x].toString() === oldCredName + " U/I"){//start 4th if/else
              newCreds.push([newCredName + " U/I"]);
            }//end 4th if/else
            else{newCreds.push([curCreds[x].toString()])}
          }//end 2nd for
          pmddmscv[i][4] = FunctionContainer.array1LevelIntoString(newCreds);
        }//end 1st for
        //paste new data in pmddms
        FunctionContainer.tripleTrySetSSValues(pmddms, 2, 1, pmddmscv.length, pmddmscv[0].length, pmddmscv);
        
        
        //changes it in muhaus
        //member update hub all updates sheet
        curVals = FunctionContainer.getmuhauscv("date", dllscv);
        var muhaus = curVals[0];
        var muhauscv = curVals[1];
        var muhauslri = curVals[2];
        curVals = undefined;
        for(var i=0; i<muhauscv.length; i+=1){//start 1st for
          if(muhauscv[i][0].toString() === "Credential Change"){//start 4th if
            var curEntryCreds = FunctionContainer.splitUpCredChangeDetails(muhauscv[i][2].toString());
            //prev cred
            if(curEntryCreds[0].toString() === oldCredName){//start 5th if
              muhauscv[i][2] = "Previous Credential: " + newCredName + " ~ New Credential: " + curEntryCreds[1].toString();
              i = muhauscv.length+1;
            }//end 5th if
            //prev cred
            else if(curEntryCreds[0].toString() === oldCredName + " U/I"){//start 5th if
              muhauscv[i][2] = "Previous Credential: " + newCredName + " U/I ~ New Credential: " + curEntryCreds[1].toString();
              i = muhauscv.length+1;
            }//end 5th if
            //new cred
            else if(curEntryCreds[1].toString() === oldCredName){//start 5th if/else
              muhauscv[i][2] = "Previous Credential: " + curEntryCreds[0].toString() + " ~ New Credential: " + newCredName;
              i = muhauscv.length+1;
            }//end 5th if/else
            //new cred
            else if(curEntryCreds[1].toString() === oldCredName + " U/I"){//start 5th if/else
              muhauscv[i][2] = "Previous Credential: " + curEntryCreds[0].toString() + " ~ New Credential: " + newCredName + " U/I";
              i = muhauscv.length+1;
            }//end 5th if/else
            //doesnt match
            else{//start 5th if/else
              muhauscv[i][2] = "Previous Credential: " + curEntryCreds[0].toString() + " ~ New Credential: " + curEntryCreds[1].toString();
            }//end 5th if/else
          }//end 4th if
        }//end 1st for
        //pastes values
        FunctionContainer.tripleTrySetSSValues(muhaus, 3, 1, muhauscv.length, muhauscv[0].length, muhauscv);
        
        
        //changes role in discord
        //ch^r,Role Name,New Role Name
        FunctionContainer.discordExpansionFormSend("ch^r," + oldCredName + "," + newCredName);
      }//end 3rd if
      
      
      else if(credChangeOperation === "LDI Credentials Change"){//start 3rd if/else
        
        //if names are the same
        if(oldCredName === newCredName){//start 4th if
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted new and old credential as the same name in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if
        
        //adding
        if(oldCredName === "N/A"){//start 4th if
          details = details + " ~ Adding Credential: " + newCredName;
          for(var i=0; i<100; i+=1){//start 1st for
            //already exists in ldi creds
            if(dllscv[33][i].toString() === newCredName){//start 5th if
              FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
              FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "tried to add a credential that is already an LDI Credential in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
            }//end 5th if
            else if(i === 99){//start 5th if
              dllscv[33][i] = newCredName;
            }//end 5th if
          }//end 1st for
        }//end 4th if
        
        //removal
        else if(newCredName === "N/A"){//start 4th if/else
          details = details + " ~ Removing Credential: " + oldCredName;
          for(var i=0; i<100; i+=1){//start 1st for
            //exists in ldi creds
            if(dllscv[33][i].toString() === oldCredName){//start 5th if
              dllscv[33][i] = "";
              i = 101;
            }//end 5th if
            //end of loop and doesnt exist in creds
            else if(i === 99){//start 5th if
              FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
              FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "tried to remove a credential that isnt an LDI Credential in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
            }//end 5th if
          }//end 1st for
        }//end 4th if/else
        
        //switching
        else if(oldCredName !== "N/A"  &&  oldCredName !== "N/A"){//start 4th if/else
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "tried to add a credential and remove one LDI Credential at the same time in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if/else
        else{//start 4th if/else
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "had an error occur and need to retry entry in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if/else
        
        //turns off forms
        FunctionContainer.formTurnOff(["all"], dllscv);
        
        //waits 15 seconds for scripts running to complete
        Utilities.sleep(15000);
        
        //paste new data in dlls
        FunctionContainer.tripleTrySetSSValues(dlls, 1, 1, dllscv.length, dllscv[0].length, dllscv);
        
      }//end 3rd if/else
      
      
      else if(credChangeOperation === "Forge Credentials Change"){//start 3rd if/else
        var curForgeCreds = FunctionContainer.splitEmUp(dllscv[34][0]);
        
        //if names are the same
        if(oldCredName === newCredName){//start 4th if
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted new and old credential as the same name in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if

        //adding
        if(oldCredName === "N/A"){//start 4th if
          details = details + " ~ Adding Credential: " + newCredName;
          for(var i=0; i<curForgeCreds.length; i+=1){//start 1st for
            //already exists in ldi creds
            if(curForgeCreds[i].toString() === newCredName){//start 5th if
              FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
              FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "tried to add a credential that is already an Forge Credential in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
            }//end 5th if
            else if(i === curForgeCreds.length-1){//start 5th if
              curForgeCreds.push([newCredName]);
              i = curForgeCreds.length+1;
            }//end 5th if
          }//end 1st for
        }//end 4th if
        
        //removal
        else if(newCredName === "N/A"){//start 4th if/else
          details = details + " ~ Removing Credential: " + oldCredName;
          for(var i=curForgeCreds.length-1; i>=0; i-=1){//start 1st for
            //exists in ldi creds
            if(curForgeCreds[i].toString() === oldCredName){//start 5th if
              curForgeCreds.splice(i);
              i = -1;
            }//end 5th if
            //end of loop and doesnt exist in creds
            else if(i === 0){//start 5th if
              FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
              FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "tried to remove a credential that isnt an Forge Credential in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
            }//end 5th if
          }//end 1st for
        }//end 4th if/else
        
        //switching
        else if(oldCredName !== "N/A"  &&  oldCredName !== "N/A"){//start 4th if/else
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "tried to add a credential and remove one Forge Credential at the same time in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if/else
        else{//start 4th if/else
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "had an error occur and need to retry entry in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if/else
        
        //turns off forms
        FunctionContainer.formTurnOff(["all"], dllscv);
        
        //waits 15 seconds for scripts running to complete
        Utilities.sleep(15000);
        
        dllscv[34][0] = FunctionContainer.array1LevelIntoString(curForgeCreds);
        
        //paste new data in dlls
        FunctionContainer.tripleTrySetSSValues(dlls, 1, 1, dllscv.length, dllscv[0].length, dllscv);
      }//end 3rd if/else
      
      
      else if(credChangeOperation === "Verification Personnel Credentials Change"){//start 3rd if/else
        var curVerificationCreds = FunctionContainer.splitEmUp(dllscv[35][0]);
        
        //if names are the same
        if(oldCredName === newCredName){//start 4th if
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted new and old credential as the same name in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if

        //adding
        if(oldCredName === "N/A"){//start 4th if
          details = details + " ~ Adding Credential: " + newCredName;
          for(var i=0; i<curVerificationCreds.length; i+=1){//start 1st for
            //already exists in ldi creds
            if(curVerificationCreds[i].toString() === newCredName){//start 5th if
              FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
              FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "tried to add a credential that is already an Verification Credential in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
            }//end 5th if
            else if(i === curVerificationCreds.length-1){//start 5th if
              curVerificationCreds.push([newCredName]);
              i = curVerificationCreds.length+1;
            }//end 5th if
          }//end 1st for
        }//end 4th if
        
        //removal
        else if(newCredName === "N/A"){//start 4th if/else
          details = details + " ~ Removing Credential: " + oldCredName;
          for(var i=curVerificationCreds.length-1; i>=0; i-=1){//start 1st for
            //exists in ldi creds
            if(curVerificationCreds[i].toString() === oldCredName){//start 5th if
              curVerificationCreds.splice(i);
              i = -1;
            }//end 5th if
            //end of loop and doesnt exist in creds
            else if(i === 0){//start 5th if
              FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
              FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "tried to remove a credential that isnt an Verification Credential in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
            }//end 5th if
          }//end 1st for
        }//end 4th if/else
        
        //switching
        else if(oldCredName !== "N/A"  &&  oldCredName !== "N/A"){//start 4th if/else
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "tried to add a credential and remove one Verification Credential at the same time in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if/else
        else{//start 4th if/else
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "had an error occur and need to retry entry in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if/else
        
        //turns off forms
        FunctionContainer.formTurnOff(["all"], dllscv);
        
        //waits 15 seconds for scripts running to complete
        Utilities.sleep(15000);
        
        dllscv[35][0] = FunctionContainer.array1LevelIntoString(curVerificationCreds);
        
        //paste new data in dlls
        FunctionContainer.tripleTrySetSSValues(dlls, 1, 1, dllscv.length, dllscv[0].length, dllscv);
      }//end 3rd if/else
      
      
      else if(credChangeOperation === "Scheduling Event Leaders Credential Change"){//start 3rd if/else
        var curSchedulingCreds = FunctionContainer.splitEmUp(dllscv[94][0]);
        
        //if names are the same
        if(oldCredName === newCredName){//start 4th if
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted new and old credential as the same name in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if

        //adding
        if(oldCredName === "N/A"){//start 4th if
          details = details + " ~ Adding Credential: " + newCredName;
          for(var i=0; i<curSchedulingCreds.length; i+=1){//start 1st for
            //already exists in ldi creds
            if(curSchedulingCreds[i].toString() === newCredName){//start 5th if
              FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
              FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "tried to add a credential that is already an Scheduling Credential in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
            }//end 5th if
            else if(i === curSchedulingCreds.length-1){//start 5th if
              curSchedulingCreds.push([newCredName]);
              i = curSchedulingCreds.length+1;
            }//end 5th if
          }//end 1st for
        }//end 4th if
        
        //removal
        else if(newCredName === "N/A"){//start 4th if/else
          details = details + " ~ Removing Credential: " + oldCredName;
          for(var i=curSchedulingCreds.length-1; i>=0; i-=1){//start 1st for
            //exists in ldi creds
            if(curSchedulingCreds[i].toString() === oldCredName){//start 5th if
              curSchedulingCreds.splice(i);
              i = -1;
            }//end 5th if
            //end of loop and doesnt exist in creds
            else if(i === 0){//start 5th if
              FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
              FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "tried to remove a credential that isnt an Scheduling Credential in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
            }//end 5th if
          }//end 1st for
        }//end 4th if/else
        
        //switching
        else if(oldCredName !== "N/A"  &&  oldCredName !== "N/A"){//start 4th if/else
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "tried to add a credential and remove one Scheduling Credential at the same time in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if/else
        else{//start 4th if/else
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "had an error occur and need to retry entry in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if/else
        
        //turns off forms
        FunctionContainer.formTurnOff(["all"], dllscv);
        
        //waits 15 seconds for scripts running to complete
        Utilities.sleep(15000);
        
        dllscv[94][0] = FunctionContainer.array1LevelIntoString(curSchedulingCreds);
        
        //paste new data in dlls
        FunctionContainer.tripleTrySetSSValues(dlls, 1, 1, dllscv.length, dllscv[0].length, dllscv);
        
      }//end 3rd if/else
      
      
      else if(credChangeOperation === "Credential Type Change"){//start 3rd if/else
        
        details = details + " ~ Credential In Question: " + oldCredName + " ~ Old Credential Type: " + oldCredType + " ~ New Credential Type: " + newCredType;
        
        if(oldCredType === newCredType){//start 4th if
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "tried to change a credential's type to what its type already was in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if
        
        //turns off forms
        FunctionContainer.formTurnOff(["all"], dllscv);
        
        //waits 15 seconds for scripts running to complete
        Utilities.sleep(15000);
        
        dllscv[oldCredRowNum][oldCredColNum] = "";
        
        for(var i=1; i<100; i+=1){//start 1st for
          if(dllscv[newCredRowNum][i].toString() === ""){//start 4th if
            dllscv[newCredRowNum][i] = oldCredName;
            i = 101;
          }//end 4th if
        }//end 1st for
        
        //paste new data in dlls
        FunctionContainer.tripleTrySetSSValues(dlls, 1, 1, dllscv.length, dllscv[0].length, dllscv);
        
      }//end 3rd if/else
      
      
      else if(credChangeOperation === "Add Credential"){//start 3rd if/else
        
        details = details + " ~ New Credential: " + newCredName + " ~ New Credential Type: " + newCredType;
        
        //if cred already exists
        if(credExists){//start 4th if
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "tried to add a credential that already exists in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if
        
        //sends error if cred is N/A
        if(newCredName === "N/A"){//start 4th if
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "tried to add a credential as the name N/A in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if
        
        //sends error if cred has a special character
        if(newCredName.toString().indexOf(",") !== -1  ||  newCredName.toString().indexOf("~") !== -1  ||  newCredName.toString().indexOf("]") !== -1
          ||  newCredName === ""  ||  newCredName.toString().indexOf("[") !== -1
          ||  newCredName.toString().indexOf("(") !== -1  ||  newCredName.toString().indexOf(")") !== -1  
          ||  newCredName.toString().indexOf("*") !== -1){//start 4th if
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "tried to add a credential with illegal special characters in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if
        
        //if length is above 40
        if(newCredName.length > 40){//start 4th if
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "tried to add a credential longer than 40 characters in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if
        
        //turns off forms
        FunctionContainer.formTurnOff(["all"], dllscv);
        
        //waits 15 seconds for scripts running to complete
        Utilities.sleep(15000);
        
        for(var i=1; i<100; i+=1){//start 1st for
          if(dllscv[newCredRowNum][i].toString() === ""){//start 4th if
            dllscv[newCredRowNum][i] = newCredName;
            i = 101;
          }//end 4th if
        }//end 1st for
        
        //paste new data in dlls
        FunctionContainer.tripleTrySetSSValues(dlls, 1, 1, dllscv.length, dllscv[0].length, dllscv);
        
        //create role in discord
        //c^r,Role Name,Color
        FunctionContainer.discordExpansionFormSend("c^r," + newCredName + ",#00ff00");
        
      }//end 3rd if/else
      else if(credChangeOperation === "Delete Credential"){//start 3rd if/else
        details = details + " ~ Old Credential: " + oldCredName;
        
        //sends error if cred is N/A
        if(oldCredName === "N/A"){//start 4th if
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted old credential as N/A when removing a credential in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if
        
        //turns off forms
        FunctionContainer.formTurnOff(["all"], dllscv);
        
        //waits 15 seconds for scripts running to complete
        Utilities.sleep(15000);
        
        dllscv[oldCredRowNum][oldCredColNum] = "";
        
        //paste new data in dlls
        FunctionContainer.tripleTrySetSSValues(dlls, 1, 1, dllscv.length, dllscv[0].length, dllscv);
        
        //send warning to remove role in discord
        FunctionContainer.discordGeekSquadWarning("Expansion Form Warnings", "The role **" + oldCredName + "** needs to be manually __removed__ from the server.");
        
        for(var i=0; i<pmdcmscv.length; i+=1){//start 1st for
          var curCreds = FunctionContainer.splitEmUp(pmdcmscv[i][4]);
          var newCreds = [];
          for(var x=0; x<curCreds.length; x+=1){//start 2nd for
            if(curCreds[x].toString() === oldCredName){//start 4th if
              //nothing
            }//end 4th if
            else if(curCreds[x].toString() === oldCredName + " U/I"){//start 4th if/else
              //nothing
            }//end 4th if/else
            else{newCreds.push([curCreds[x].toString()])}
          }//end 2nd for
          pmdcmscv[i][4] = FunctionContainer.array1LevelIntoString(newCreds);
        }//end 1st for
        //paste new data in pmdcms
        FunctionContainer.tripleTrySetSSValues(pmdcms, 2, 1, pmdcmscv.length, pmdcmscv[0].length, pmdcmscv);
        
      }//end 3rd if/else
    }//end 2nd if
    
    
    //Training Types Change
    if(operation === "Training Types Change"){//start 2nd if
      
      //sends error if cred is N/A
      if(newTrainingType === oldTrainingType){//start 4th if
        FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
        FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted old training type as the same as the new training type in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
      }//end 4th if
      
      
      //adding training type
      if(oldTrainingType === "N/A"){//start 4th if
        details = "Training Types Change ~ Adding Training Type: " + newTrainingType;
        
        //if length is above 40
        if(newTrainingType.length > 40){//start 5th if
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted newtraining type longer than 40 characters in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 5th if
        
        //sends error if training type has a special character
        if(newTrainingType.toString().indexOf(",") !== -1  ||  newTrainingType.toString().indexOf("~") !== -1  ||  newTrainingType.toString().indexOf("]") !== -1
          ||  newTrainingType === ""  ||  newTrainingType.toString().indexOf("[") !== -1
          ||  newTrainingType.toString().indexOf("(") !== -1  ||  newTrainingType.toString().indexOf(")") !== -1  
          ||  newTrainingType.toString().indexOf("*") !== -1){//start 5th if
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted new credential type with an illegal special character in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 5th if
        
        //checks to see if training type already exists
        for(var i=1; i<100; i+=1){//start 1st for
          if(dllscv[14][i].toString() === newTrainingType  &&  dllscv[14][i].toString() !== ""){//start 5th if
            FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
            FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted training type that already exists in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
          }//end 5th if
        }//end 1st for
        
        //checks to see if it has a group name in it
        for(var i=0; i<57; i+=1){//start 1st for
          if(dllscv[40][i].toString().indexOf(newTrainingType) !== -1){//start 5th if
            FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
            FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted training type that has a group's name in it in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
          }//end 5th if
        }//end 1st for
        
        //turns off forms
        FunctionContainer.formTurnOff(["all"], dllscv);
        
        //waits 15 seconds for scripts running to complete
        Utilities.sleep(15000);
        
        //adds it to dllscv
        for(var i=1; i<100; i+=1){//start 1st for
          if(dllscv[14][i].toString() === ""){//start 1st if
            dllscv[14][i] = newTrainingType;
            i = 101;
          }//end 1st if
        }//end 1st for
        
        //paste new data in dlls
        FunctionContainer.tripleTrySetSSValues(dlls, 1, 1, dllscv.length, dllscv[0].length, dllscv);
        
      }//end 4th if
      
      
      //removing training type
      else if(newTrainingType === "N/A"){//start 4th if/else
        
        //turns off forms
        FunctionContainer.formTurnOff(["all"], dllscv);
        
        //waits 15 seconds for scripts running to complete
        Utilities.sleep(15000);
        
        details = "Training Types Change ~ Removing Training Type: " + oldTrainingType;
        
        //adds it to dllscv
        for(var i=1; i<100; i+=1){//start 1st for
          if(dllscv[14][i].toString() === oldTrainingType){//start 1st if
            dllscv[14][i] = "";
            i = 101;
          }//end 1st if
        }//end 1st for
        
        //paste new data in dlls
        FunctionContainer.tripleTrySetSSValues(dlls, 1, 1, dllscv.length, dllscv[0].length, dllscv);
        
      }//end 4th if/else
      
      
      //renaming trining type
      else{//start 4th if/else
        details = "Training Types Change ~ Renaming Training Type ~ Old Training Type Name: " + oldTrainingType + " ~ New Training Type Name: " + newTrainingType;
        
        //if length is above 40
        if(newTrainingType.length > 40){//start 5th if
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted new training type longer than 40 characters in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 5th if
        
        //sends error if training type has a special character
        if(newTrainingType.toString().indexOf(",") !== -1  ||  newTrainingType.toString().indexOf("~") !== -1  ||  newTrainingType.toString().indexOf("]") !== -1
          ||  newTrainingType === ""  ||  newTrainingType.toString().indexOf("[") !== -1
          ||  newTrainingType.toString().indexOf("(") !== -1  ||  newTrainingType.toString().indexOf(")") !== -1  
          ||  newTrainingType.toString().indexOf("*") !== -1){//start 5th if
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted new training type with an illegal special character in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 5th if
        
        //checks to see if training type already exists
        for(var i=1; i<100; i+=1){//start 1st for
          if(dllscv[14][i].toString() === newTrainingType){//start 5th if
            FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
            FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted training type that already exists in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
            i = 101;
          }//end 5th if
          if(dllscv[14][i].toString().indexOf(newTrainingType) !== -1){//start 5th if
            FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
            FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted training type that is a part of another training type in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
            i = 101;
          }//end 5th if
        }//end 1st for
        
        //checks to see if it has a group name in it
        for(var i=0; i<57; i+=1){//start 1st for
          if(dllscv[40][i].toString().indexOf(newTrainingType) !== -1){//start 5th if
            FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
            FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted training type that has a group's name in it in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
          }//end 5th if
        }//end 1st for
        
        //renames it in dllscv
        for(var i=1; i<100; i+=1){//start 1st for
          if(dllscv[14][i].toString() === oldTrainingType){//start 1st if
            dllscv[14][i] = newTrainingType;
            i = 101;
          }//end 1st if
        }//end 1st for
        
        //turns off forms
        FunctionContainer.formTurnOff(["all"], dllscv);
        
        //waits 15 seconds for scripts running to complete
        Utilities.sleep(15000);
        
        //paste new data in dlls
        FunctionContainer.tripleTrySetSSValues(dlls, 1, 1, dllscv.length, dllscv[0].length, dllscv);
        
        
        //renames it in event hub
        //Event Debrief Hub all Event debriefs sheet
        curVals = FunctionContainer.getedhaedscv("date", dllscv);
        var edhaeds = curVals[0];
        var edhaedscv = curVals[1];
        curVals = undefined;
        
        //cycles thru event hub
        for(var i=0; i<edhaedscv.length; i+=1){//start 1st for
          //if oldTT is in the events TT's
          if(edhaedscv[i][3].toString().indexOf(oldTrainingType) !== -1){//start 5th if
            var curEventTTs = FunctionContainer.splitEmUp(edhaedscv[i][3].toString());
            //cycles thru curEventTTs
            for(var x=0; x<curEventTTs.length; x+=1){//start 2nd for
              //if cur TT matches old TT
              if(curEventTTs[x].toString() ===  oldTrainingType){//start 6th if
                curEventTTs[x] = newTrainingType;
              }//end 6th if
            }//end 2nd for
            //switches old cell data for new data
            edhaedscv[i][3] = FunctionContainer.array1LevelIntoString(curEventTTs);
          }//end 5th if
        }//end 1st for
        
        //pastes new edhaedscv data
        FunctionContainer.tripleTrySetSSValues(edhaeds, 3, 1, edhaedscv.length, edhaedscv[0].length, edhaedscv);
  
        //forge hub
        FunctionContainer.tripleTrySheetTextReplacer(dllscv[82][1].toString(), oldGroupName, newGroupName);
        
      }//end 4th if/else
      
    }//end 2nd if
    
    
    //Rank/Abbreviated Rank Name Change
    if(operation === "Rank/Abbreviated Rank Name Change"){//start 2nd if
      
      details = "Rank/Abbreviated Rank Name Change";
      
      //if length is above 20
      if(newRankName.length > 20){//start 3rd if
        FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
        FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "tried to put new rank name longer than 20 characters in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
      }//end 3rd if
      
      //if length is above 4
      if(newRankAbbr.length > 4){//start 3rd if
        FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
        FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "tried to put new rank abbreviation longer than 4 characters in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
      }//end 3rd if
      
      //n/a as rank name
      if(newRankName === "N/A"){//start 3rd if
        FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
        FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "tried to put new rank name as N/A in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
      }//end 3rd if
      
      //n/a as rank abbr
      if(newRankAbbr === "N/A"){//start 3rd if
        FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
        FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "tried to put new rank abbreviation as N/A in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
      }//end 3rd if
      
      //same name exists
      if(newRankNameExists){//start 3rd if
        FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
        FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "tried to put new rank name as an name already used by a rank in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
      }//end 3rd if
      
      //same abbr exists
      if(newRankAbbrExists){//start 3rd if
        FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
        FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "tried to put new rank abbreviation as an abbreviation already used by a rank in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
      }//end 3rd if
        
      //sends error if newRankName has a special character
      if(newRankName.toString().indexOf(",") !== -1  ||  newRankName.toString().indexOf("~") !== -1  ||  newRankName.toString().indexOf("]") !== -1
        ||  newRankName === ""  ||  newRankName.toString().indexOf("[") !== -1
        ||  newRankName.toString().indexOf("(") !== -1  ||  newRankName.toString().indexOf(")") !== -1  
        ||  newRankName.toString().indexOf("*") !== -1){//start 5th if
        FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
        FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted new rank name with an illegal special character in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
      }//end 5th if
        
      //sends error if newRankName has a special character
      if(newRankAbbr.toString().indexOf(",") !== -1  ||  newRankAbbr.toString().indexOf("~") !== -1  ||  newRankAbbr.toString().indexOf("]") !== -1
        ||  newRankAbbr === ""  ||  newRankAbbr.toString().indexOf("[") !== -1
        ||  newRankAbbr.toString().indexOf("(") !== -1  ||  newRankAbbr.toString().indexOf(")") !== -1  
        ||  newRankAbbr.toString().indexOf("*") !== -1){//start 5th if
        FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
        FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted new rank abbreviation with an illegal special character in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
      }//end 5th if
        
      //turns off forms
      FunctionContainer.formTurnOff(["all"], dllscv);
      
      //waits 15 seconds for scripts running to complete
      Utilities.sleep(15000);
      
      
      //change abbreviation
      if(newRankAbbr !== ""){//start 1st if
        
        details = details + " ~ Old Rank Abbreviation: " + oldRankAbbr + " ~ New Rank Abbreviation: " + newRankAbbr;
        
        //get all nicknames that will need to be changed
        var curNicks = [];
        //[[oldNickname, row]]
        for(var i=0; i<pmdcmscv.length; i+=1){//start 1st for
          if(pmdcmscv[i][2].toString() === oldRankName){//start 1st if
            curNicks.push([FunctionContainer.getDiscordNicknameWithRow(i, dllscv, pmdcmscv), i]);
          }//end 1st if
        }//end 1st for
        
        //change in dlls
        dllscv[25][oldRankCol] = newRankAbbr;
        
        //paste new data in dlls
        FunctionContainer.tripleTrySetSSValues(dlls, 1, 1, dllscv.length, dllscv[0].length, dllscv);
        
        
        //change discord nicknames
        for(var i=0; i<curNicks.length; i+=1){//start 1st for
          //c^n,Nickname,New Nickname
          FunctionContainer.discordExpansionFormSend("c^n," + curNicks[i][0].toString() + "," + FunctionContainer.getDiscordNicknameWithRow(curNicks[i][1], dllscv, pmdcmscv));
        }//end 1st for
        
      }//end 1st if
      
      
      //change name
      if(newRankName !== ""){//start 1st if
        
        details = details + " ~ Old Rank Name: " + oldRankName + " ~ New Rank Name: " + newRankName;
        
        //change in all locations dlls
        dllscv[24][oldRankCol] = newRankName;
        
        for(var i=0; i<57; i+=1){//start 1st for
          curVals = FunctionContainer.splitEmUp(dllscv[61][i]);
          for(var x=0; x<curVals.length; x+=1){//start 2nd for
            if(curVals[x].toString() === oldRankName){//start 1st if
              curVals[x] = newRankName;
            }//end 1st if
          }//end 2nd for
          dllscv[61][i] = FunctionContainer.array1LevelIntoString(curVals);
        }//end 1st for
        
        //paste new data in dlls
        FunctionContainer.tripleTrySetSSValues(dlls, 1, 1, dllscv.length, dllscv[0].length, dllscv);
        
        
        //change in pmdcms
        for(var i=0; i<pmdcmscv.length; i+=1){//start 1st for
          if(pmdcmscv[i][2].toString() === oldRankName){//start 1st if
            pmdcmscv[i][2] = newRankName;
          }//end 1st if
        }//end 1st for
        
        //paste new data in pmdcms
        FunctionContainer.tripleTrySetSSValues(pmdcms, 2, 1, pmdcmscv.length, pmdcmscv[0].length, pmdcmscv);
        
        
        //change in pmddms
        //Phoenix Member Data Discharged Members Sheet
        var curVals = FunctionContainer.getpmddmscv();
        var pmddms = curVals[0];
        var pmddmscv = curVals[1];
        var pmddmslri = curVals[2];
        curVals = undefined;
        
        for(var i=0; i<pmddmscv.length; i+=1){//start 1st for
          if(pmddmscv[i][2].toString() === oldRankName){//start 1st if
            pmddmscv[i][2] = newRankName;
          }//end 1st if
        }//end 1st for
        
        //paste new data in pmddms
        FunctionContainer.tripleTrySetSSValues(pmddms, 2, 1, pmddmscv.length, pmddmscv[0].length, pmddmscv);
        
        
        //change in muhaus
        //member update hub all updates sheet
        curVals = FunctionContainer.getmuhauscv("date", dllscv);
        var muhaus = curVals[0];
        var muhauscv = curVals[1];
        var muhauslri = curVals[2];
        curVals = undefined;
        
        for(var i=0; i<muhauscv.length; i+=1){//start 1st for
          if(muhauscv[i][0].toString() === "Rank Change"){//start 4th if
            var curEntryRanks = FunctionContainer.splitUpRankChangeDetails(muhauscv[i][2].toString());
            //prev Rank
            if(curEntryRanks[0].toString() === oldRankName){//start 5th if
              muhauscv[i][2] = "Previous Rank: " + newRankName + " ~ New Rank: " + curEntryRanks[1].toString();
              i = muhauscv.length+1;
            }//end 5th if
            //new Rank
            else if(curEntryRanks[1].toString() === oldRankName){//start 5th if/else
              muhauscv[i][2] = "Previous Rank: " + curEntryRanks[0].toString() + " ~ New Rank: " + newRankName;
              i = muhauscv.length+1;
            }//end 5th if/else
            //doesnt match
            else{//start 5th if/else
              muhauscv[i][2] = "Previous Rank: " + curEntryRanks[0].toString() + " ~ New Rank: " + curEntryRanks[1].toString();
            }//end 5th if/else
          }//end 4th if
        }//end 1st for
        //pastes values
        FunctionContainer.tripleTrySetSSValues(muhaus, 3, 1, muhauscv.length, muhauscv[0].length, muhauscv);
        
        
        //change discord role
        //ch^r,Role Name,New Role Name
        FunctionContainer.discordExpansionFormSend("ch^r," + oldRankName + "," + newRankName);
        
      }//end 1st if
      
    }//end 2nd if
    
    
    if(operation === "Member Discord Reset"){//start 2nd if
      
      //turns off forms
      FunctionContainer.formTurnOff(["all"], dllscv);
      
      //waits 15 seconds for scripts running to complete
      Utilities.sleep(15000);
      
      details = "Member Discord Reset ~ Member In Question: " + memberInQuestion;
      //memberInQuestion
      //currentDiscName
      curVals = FunctionContainer.getMemberDiscordInfo(dllscv,pmdcmscv,memberInQuestion);
      var nickname = curVals[0];
      var discRoles = curVals[1];
      var discRolesText = curVals[2];
      curVals = undefined;
      
      //changes nickname
      //c^n,Nickname,New Nickname
      FunctionContainer.discordExpansionFormSend("c^n,"+currentDiscName+","+nickname);
      
      //removes all roles
      FunctionContainer.discordExpansionFormSend("ca^r,"+nickname)
      
      //goes thru each role and gives it to them
      //a^r,Nickname,Role
      for(var i=0; i<discRoles.length; i+=1){//start 1st for
        FunctionContainer.discordExpansionFormSend("a^r,"+nickname+","+discRoles[i].toString());
      }//end 1st for
    }//end 2nd if
    
    
    if(operation === "Member Record Retrieval"){//start 2nd if
      
      details = "Member Record Retrieval ~ Old Gamertag: " + oldGt + " ~ Member In Question: " + memberInQuestion;
      
      //Phoenix Member Data Discharged Members Sheet
      var curVals = FunctionContainer.getpmddmscv();
      var pmddms = curVals[0];
      var pmddmscv = curVals[1];
      var pmddmslri = curVals[2];
      curVals = undefined;

      var oldMemRow = -1;
      for(var i=0; i<pmddmscv.length; i+=1){//start 1st for
        if(pmddmscv[i][0].toString() === oldGt){//start 3rd if
          oldMemRow = i;
        }//end 3rd if
      }//end 1st for

      //oldMemRow isnt found
      if(oldMemRow === -1){//start 3rd if
        FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
        FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted unrecognized old gamertag in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
      }//end 3rd if
      
      
      //turns off forms
      FunctionContainer.formTurnOff(["all"], dllscv);
      
      //waits 15 seconds for scripts running to complete
      Utilities.sleep(15000);
      
      //deletes old row
      FunctionContainer.tripleTryDeleteRows(pmddms, oldMemRow+2, 1);
      
      //if not just getting rid of old discharged member row
      if(oldGt !== memberInQuestion){//start if
        //cycles thru like url update and changes old names in specified rows
        var allFileIds = [
          ["Forge Hub","Forge Entries",dllscv[82][1].toString(),[4,5,6]],
          ["Forge Hub","Active Maps",dllscv[82][1].toString(),[6,7,8,10,15]],
          ["Forge Hub","Inactive Maps",dllscv[82][1].toString(),[6,7,8,10,15]],
          ["Member Update Hub","All Updates",dllscv[82][3].toString(),[2,6]],
          ["Member Update Hub","New Member Updates",dllscv[82][3].toString(),[1,5,6,8]],
          ["Event Debrief Hub","All Event Debriefs",dllscv[82][0].toString(),[7,8,9,13]],
          ["Miscellaneous Form Hub","All Entries",dllscv[82][4].toString(),[4,5]]
        ];
       
        for(var i=0; i<allFileIds.length; i+=1){//start 1st for
          for(var x=0; x<allFileIds[i][3].length; x+=1){//start 2nd for
            
            
            //gets current sheet vals
            var currentSheet = FunctionContainer.tripleTryOpenSheet(allFileIds[i][2], allFileIds[i][1]);
            var currentSheetlri = FunctionContainer.tripleTryGetLastRow(currentSheet);
            var currentSheetcv = FunctionContainer.tripleTryGetValues(currentSheet, 1, allFileIds[i][3][x], currentSheetlri, 1);
            
            //cycles through cv and replaces old gt with new gt
            for(var y=0; y<currentSheetlri; y+=1){//start 3rd for
              while(currentSheetcv[y][0].toString().indexOf(oldGt)!==-1){//start 1st while
                currentSheetcv[y][0] = currentSheetcv[y][0].toString().replace(oldGt,memberInQuestion);
              }//end 1st while
            }//end 3rd for
            
            //pastes new data
            FunctionContainer.tripleTrySetSSValues(currentSheet, 1, allFileIds[i][3][x], currentSheetcv.length, 1, currentSheetcv);
            
          }//end 2nd for
          Utilities.sleep(250);
        }//end 1st for
        
        
        //replaces gt in response sheets
        for(var i=0; i<11; i+=1){//start 1st for
          if(dllscv[86][i].toString() !== ""){//start 3rd if
            FunctionContainer.tripleTrySheetTextReplacer(dllscv[86][i].toString(), oldGt, memberInQuestion);
            Utilities.sleep(250);
          }//end 3rd if
        }//end 1st for
      }//end if
    }//end 2nd if
    
    
    if(operation === "Channel Options Change"){//start 2nd if
      details = "Channel Options Change ~ Old Channel Name: " + oldChannelName + " ~ New Channel Name: " + newChannelName;
      
      var curChannels = [];
      for(var i=0; i<150; i+=1){//start 1st for
        if(dllscv[32][i].toString() !== ""){//start 1st if
          curChannels.push([dllscv[32][i].toString()]);
        }//end 1st if
      }//end 1st for
      
      //channels match
      if(oldChannelName === newChannelName){//start 3rd if
        FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
        FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted same channel name for both new and old in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
      }//end 3rd if
      
      //adding
      if(oldChannelName === "N/A"){//start 3rd if
        //channel name has a space(s)
        if(newChannelName.indexOf(" ") !== -1){//start 4th if
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted channel name with a space in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if
        //sees if it already exists
        for(var i=0; i<curChannels.length; i+=1){//start 1st for
          curChannels[i] = curChannels[i].toString();
          if(curChannels[i].toString() === oldChannelName){//start 4th if
            FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
            FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted a channel name already in the list of channels in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());  
          }//end 4th if
          //doesnt exist adds to array
          else if(i === curChannels.length-1){//start 4th if
            curChannels.push(newChannelName);
            i = curChannels.length+1;
          }//end 4th if
        }//end 1st for
        
        //turns off forms
        FunctionContainer.formTurnOff(["all"], dllscv);
        
        //waits 15 seconds for scripts running to complete
        Utilities.sleep(15000);
        
        //paste new data in dlls
        FunctionContainer.tripleTrySetSSValues(dlls, 33, 1, 1, curChannels.length, [curChannels]);
      }//end 3rd if
      
      //removing
      else if(newChannelName === "N/A"){//start 3rd if/else
        //sees if it already exists
        for(var i=curChannels.length-1; i>=0; i-=1){//start 1st for
          curChannels[i] = curChannels[i].toString();
          if(curChannels[i].toString() === oldChannelName){//start 4th if
            curChannels.splice(i);
            i = -1;
          }//end 4th if
          //doesnt exist adds to array
          else if(i === 0){//start 4th if
            FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
            FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "put an unrecognized old channel name in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());  
          }//end 4th if
        }//end 1st for
        
        //turns off forms
        FunctionContainer.formTurnOff(["all"], dllscv);
        
        //waits 15 seconds for scripts running to complete
        Utilities.sleep(15000);
        
        //adds element onto array so it overwrites old cells
        FunctionContainer.addBlankElementsToArrayLVL1(curChannels, 10);
        
        //paste new data in dlls
        FunctionContainer.tripleTrySetSSValues(dlls, 33, 1, 1, curChannels.length, [curChannels]);
      }//end 3rd if/else
      
      //renaming
      else if(oldChannelName !== "N/A"  &&  newChannelName !== "N/A"){//start 3rd if/else
        //channel name has a space(s)
        if(newChannelName.indexOf(" ") !== -1){//start 4th if
          FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
          FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted channel name with a space in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
        }//end 4th if
        
        //sees if it already exists
        for(var i=0; i<curChannels.length; i+=1){//start 1st for
          curChannels[i] = curChannels[i].toString();
          if(curChannels[i].toString() === newChannelName){//start 4th if
            FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
            FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted an already take new channel name in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());  
          }//end 4th if
        }//end 1st for
        
        for(var i=0; i<curChannels.length; i+=1){//start 1st for
          if(curChannels[i].toString() === oldChannelName){//start 4th if
            curChannels[i] = newChannelName;
            i = curChannels.length+1;
          }//end 4th if
          //doesnt exist adds to array
          else if(i === curChannels.length-1){//start 4th if
            FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
            FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted an unrecognized old channel name in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());  
          }//end 4th if
        }//end 1st for
        
        //turns off forms
        FunctionContainer.formTurnOff(["all"], dllscv);
        
        //waits 15 seconds for scripts running to complete
        Utilities.sleep(15000);
        
        //paste new data in dlls
        FunctionContainer.tripleTrySetSSValues(dlls, 33, 1, 1, curChannels.length, [curChannels]);
      }//end 3rd if/else
      
    }//end 2nd if
    
    
    if(operation === "Group Type Name Change"){//start 2nd if
      details = "Group Type Name Change ~ Old Group Type Name: " + oldGroupTypeName + " ~ New Group Type Name: " + newGroupTypeName;
      //oldGroupTypeName
      //newGroupTypeName
      //type names match
      if(oldGroupTypeName === newGroupTypeName){//start 3rd if
        FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
        FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted same group type name for both new and old in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
      }//end 3rd if
      
      //type names are N/A
      if(newGroupTypeName === "N/A"){//start 3rd if
        FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
        FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted new group type name as N/A in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
      }//end 3rd if
      
      //type names are N/A
      if(newGroupTypeName.length > 20){//start 3rd if
        FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
        FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted new group type name longer than 20 characters in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
      }//end 3rd if
      
      //type name exists
      if(typeExists){//start 3rd if
        FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
        FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted new group type name as an already taken type name in a __" + operation + "__ operation", efrslri, dllscv[88][4].toString());
      }//end 3rd if
        
      //turns off forms
      FunctionContainer.formTurnOff(["all"], dllscv);
      
      //waits 15 seconds for scripts running to complete
      Utilities.sleep(15000);
      
      discRoles = FunctionContainer.getAllPossibleDiscRoles(dllscv);
      
      //changes group type name
      dllscv[60][groupTypeCol] = newGroupTypeName;
      
      //change group names in dllscv that belong to the group type
      for(var i=0; i<57; i+=1){//start 1st for
        if(dllscv[53][i] === groupTypeCol){//start 1st if
          var curGroup = dllscv[40][i].toString();
          var newGroup = curGroup.replace(oldGroupTypeName, newGroupTypeName);
          renameGroup(curGroup, newGroup, dlls, dllscv, i, pmdcms, pmdcmscv, discRoles);
        }//end 1st if
      }//end 1st for
      
      //paste new data in dlls
      FunctionContainer.tripleTrySetSSValues(dlls, 1, 1, dllscv.length, dllscv[0].length, dllscv);
      
    }//end 2nd if
    
    
    if(operation === "Code Inclusion Change"){//start 2nd if
      details = "Code Inclusion Change ~ Code In Question: " + codeInQuestion + " ~ Desired Forms: " + formsIncluded;
      var formsIncludedArray = FunctionContainer.splitEmUp(formsIncluded);
      for(var i=0; i<11; i+=1){//start 1st for
        for(var x=0; x<formsIncludedArray.length; x+=1){//start 2nd for
          if(dllscv[84][i].toString() === formsIncludedArray[x].toString()){//start 3rd if
            formsIncludedArray[x] = dllscv[89][i].toString();
          }//end 1st if
        }//end 3rd for
      }//end 1st for
      
      //turns off forms
      FunctionContainer.formTurnOff(["all"], dllscv);
      
      //waits 15 seconds for scripts running to complete
      Utilities.sleep(15000);
      
      dllscv[30][parseInt(codeInQuestion)-1] = FunctionContainer.array1LevelIntoString(formsIncludedArray);
      
      //paste new data in dlls
      FunctionContainer.tripleTrySetSSValues(dlls, 1, 1, dllscv.length, dllscv[0].length, dllscv);
      
      //delete 1 message from code channel
      //d^c,Channel Name,Number of Messages
      FunctionContainer.discordExpansionFormSend("d^c,code-" + codeInQuestion + ",1");Utilities.sleep(500);
      
      //delete 1 last message from code channel
      //d^c,Channel Name,Number of Messages
      FunctionContainer.discordExpansionFormSend("d^c,code-" + codeInQuestion + ",1");Utilities.sleep(500);
      
      //send new embedded message in discord
      FunctionContainer.discordExpansionFormSend(FunctionContainer.getCodeEmbeddedClearanceMessage(dllscv, codeInQuestion));Utilities.sleep(500);
      
      //send new normal code in discord
      //dllscv[29][parseInt(codeInQuestion)-1].toString()
      //s$m$^Message^Channel Name
      FunctionContainer.discordExpansionFormSend("s$m$^" + dllscv[29][parseInt(codeInQuestion)-1] + "^code-" + codeInQuestion);
      
    }//end 2nd if
    
    
    //pastes vals into miscellaneous Form Hub Entries Sheet
    FunctionContainer.miscFormHubEntry("Expansion Form", FunctionContainer.dateReplace(efrscv[0].toString()), 
      FunctionContainer.timeRetrieval12Cycle(efrscv[0]), details, perpitraitor, dllscv);
    
    ///*** DLLS FORMULA FIX ***///
    var formulas = [["=TODAY()", "=TODAY()", "=TODAY()+365", "=TODAY()+365", "=TODAY()+6", "=TODAY()+6", "=TODAY()+5",
      "=TODAY()+4", "=TODAY()+3", "=TODAY()+2", "=TODAY()+1", "=TODAY()+7", "=TODAY()-7", "=TODAY()-7", "=NOW()", 
      "=NOW()", "=TODAY()-6", "=TODAY()-5", "=TODAY()-4", "=TODAY()-3", "=TODAY()-2", "=TODAY()-1"]];
    dlls.getRange(11,1,1,22).setFormulas(formulas);
    
    //gets current data
    //Phoenix Member Data Current Members Sheet
    var curVals = FunctionContainer.getpmdcmscv();
    var pmdcms = curVals[0];
    var pmdcmscv = curVals[1];
    curVals = undefined;
    
    // Data Lists Lists Sheet
    curVals = FunctionContainer.getdllscv();
    var dlls = curVals[0];
    var dllscv = curVals[1];
    curVals = undefined;
    
    //updates forms
    FunctionContainer.updateAllFormLists1(dllscv, pmdcmscv);
    
    //turns on forms
    FunctionContainer.formTurnOn(["all"], dllscv);
  }//end 1st if
  
  
  //if code is wrong
  else{
    FunctionContainer.discordErrorPms(pmdcmscv, perpitraitor, errorInfo, "Expansion Form Errors", dllscv);
    FunctionContainer.indFormErrorReport(perpitraitor, "expansion form", "inputted an incorrect code", efrslri, dllscv[88][4].toString());
  }//end 1st else
  
  
}//end main


function renameGroup(oldGroupName, newGroupName, dlls, dllscv, groupCol, pmdcms, pmdcmscv, discRoles){
  //group names
  dllscv[40][groupCol] = newGroupName;
  dllscv[dllscv[51][groupCol]][dllscv[52][groupCol]] = newGroupName;
  //group type
  if(dllscv[60][dllscv[53][groupCol]].toString() === oldGroupName){dllscv[60][dllscv[53][groupCol]] = newGroupName;}
  
  //entry groups
  for(var i=0; i<100; i+=1){//start 1st for
    if(dllscv[12][i].toString() === oldGroupName){//start 1st if
      dllscv[12][i] = newGroupName;
    }//end 1st if
  }//end 1st for
  
  //sets new vals
  FunctionContainer.tripleTrySetSSValues(dlls, 1, 1, dllscv.length, dllscv[0].length, dllscv);
  
  
  //all form response sheets minus expansion form
  for(var i=0; i<11; i+=1){//start 1st for
    if(i !== 4){//start 1st if
      FunctionContainer.tripleTrySheetTextReplacer(dllscv[86][i].toString(), oldGroupName, newGroupName);
      Utilities.sleep(500);
    }//end 1st if
  }//end 1st for
  
  
  //phoneix member data current members sheet
  var cols = [3, 6, 10, 11, 12];
  var rows = FunctionContainer.createNumberArray(0, pmdcmscv.length);
  FunctionContainer.wordReplaceInSheet(pmdcmscv, pmdcms, oldGroupName, newGroupName, cols, rows, 2);
  
  
  //Phoenix Member Data Discharged Members Sheet
  var curVals = FunctionContainer.getpmddmscv();
  var pmddms = curVals[0];
  var pmddmscv = curVals[1];
  var pmddmslri = curVals[2];
  curVals = undefined;
  cols = [3, 6, 10, 11, 12];
  var rows = FunctionContainer.createNumberArray(0, pmddmslri-1);
  FunctionContainer.wordReplaceInSheet(pmddmscv, pmddms, oldGroupName, newGroupName, cols, rows, 2);
  
  
  //all folders and files listed in dllscv
  //Group/council Folder ID
  //dllscv[41][groupCol].toString()
  DriveApp.getFolderById(dllscv[41][groupCol].toString()).setName(newGroupName);
  
  
  //Group/council Profile File ID
  //dllscv[47][groupCol].toString()
  if(dllscv[47][groupCol].toString() !== ""){//start 4th if
    DriveApp.getFileById(dllscv[47][groupCol].toString()).setName(newGroupName);
  }//end 4th if
  
  
  //changes perm Q name
  var pf = FormApp.openById(dllscv[85][9].toString());
  pf.getItemById(dllscv[55][groupCol].toString()).setTitle(newGroupName);
  
  
  //changes all form page break names
  //debrief form
  if(dllscv[dllscv[51][groupCol]][dllscv[52][groupCol]+3].toString() !== ""){//start 4th if
    FormApp.openById(dllscv[85][0].toString())
    .getItemById(dllscv[dllscv[51][groupCol]][dllscv[52][groupCol]+3].toString()).setTitle(newGroupName);
  }//end 4th if
  
  //muf form
  if(dllscv[dllscv[51][groupCol]][dllscv[52][groupCol]+5].toString() !== ""){//start 4th if
    FormApp.openById(dllscv[85][3].toString())
    .getItemById(dllscv[dllscv[51][groupCol]][dllscv[52][groupCol]+5].toString()).setTitle(newGroupName);
  }//end 4th if
  
  //nmf form ldi
  if(dllscv[dllscv[51][groupCol]][dllscv[52][groupCol]+7].toString() !== ""){//start 4th if
    FormApp.openById(dllscv[85][2].toString())
    .getItemById(dllscv[dllscv[51][groupCol]][dllscv[52][groupCol]+7].toString()).setTitle(newGroupName + " LDI");
  }//end 4th if
  
  //nmf form recruiter
  if(dllscv[dllscv[51][groupCol]][dllscv[52][groupCol]+9].toString() !== ""){//start 4th if
    FormApp.openById(dllscv[85][2].toString())
    .getItemById(dllscv[dllscv[51][groupCol]][dllscv[52][groupCol]+9].toString()).setTitle(newGroupName + " Recruiter");
  }//end 4th if
  
  
  //Group GA Sheet File ID
  //dllscv[50][groupCol].toString()
  if(dllscv[50][groupCol].toString() !== ""){//start 4th if
    
    try{
      //ga file
      var gAFile = DriveApp.getFileById(dllscv[50][groupCol].toString());
      gAFile.setTrashed(true);}
    catch(e){
      //nothing
    }
    dllscv[50][groupCol] = "";
    if(dllscv[50][groupCol] !== ""){FunctionContainer.tripleTrySetSSValuesSingleString(dlls, 51, groupCol+1, 1, "");}
  }//end 4th if
  
  
  //All hubs minus tech hub
  //member update hub all updates sheet
  curVals = FunctionContainer.getmuhauscv("date", dllscv);
  var muhaus = curVals[0];
  var muhauscv = curVals[1];
  var muhauslri = curVals[2];
  curVals = undefined;
  cols = [2];
  var rows = FunctionContainer.createNumberArray(0, muhauslri-2);
  FunctionContainer.wordReplaceInSheet(muhauscv, muhaus, oldGroupName, newGroupName, cols, rows, 3);
  muhauscv = undefined;
  
  // member update hub new member entries
  curVals = FunctionContainer.getmuhnmuscv("date", dllscv);
  var muhnmus = curVals[0];
  var muhnmuscv = curVals[1];
  var muhnmuslri = curVals[2];
  curVals = undefined;
  cols = [2];
  var rows = FunctionContainer.createNumberArray(0, muhnmuslri-2);
  FunctionContainer.wordReplaceInSheet(muhnmuscv, muhnmus, oldGroupName, newGroupName, cols, rows, 3);
  muhnmuscv = undefined;
  
  //event debrief hub
  curVals = FunctionContainer.getedhaedscv("date", dllscv);
  var edhaeds = curVals[0];
  var edhaedscv = curVals[1];
  var edhaedslri = curVals[2];
  curVals = undefined;
  cols = [4];
  var rows = FunctionContainer.createNumberArray(0, edhaedslri-2);
  FunctionContainer.wordReplaceInSheet(edhaedscv, edhaeds, oldGroupName, newGroupName, cols, rows, 3);
  edhaedscv = undefined;
  
  //forge hub
  FunctionContainer.tripleTrySheetTextReplacer(dllscv[82][1].toString(), oldGroupName, newGroupName);
  
  //member hub
  FunctionContainer.tripleTrySheetTextReplacer(dllscv[82][2].toString(), oldGroupName, newGroupName);
  
  //renames roles in discord
  FunctionContainer.bulkRoleNameChange(discRoles,oldGroupName,newGroupName);
  
  
  //discord debrief channel
  var message = "r^c," + oldGroupName.toString().toLowerCase().replace(" ", "-") + "-debriefs," + 
    newGroupName.toString().toLowerCase().replace(" ", "-") + "-debriefs";
  FunctionContainer.discordExpansionFormSend(message);
  Utilities.sleep(250);
  
  //discord normal channel
  var message = "r^c," + oldGroupName.toString().toLowerCase().replace(" ", "-") + "," + 
    newGroupName.toString().toLowerCase().replace(" ", "-");
  FunctionContainer.discordExpansionFormSend(message);
  Utilities.sleep(250);
}//end renameGroup