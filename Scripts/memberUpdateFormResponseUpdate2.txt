function memberUpdateFormResponseUpdate2(){
  errorCheck("memberUpdateFormResponseUpdate2","MemberUpdateFormResponseUpdate2");
}//end memberUpdateFormResponseUpdate2


function errorCheck(functionName,projectName){
  try{main();}//end 1st try
  catch(error){console.log(error);
    FunctionContainer.discErrorReport(error,functionName,projectName)}//end 1st catch
}//end errorCheck


function main(){
  //Member Update Form Response Sheet
  var mufrs = FunctionContainer.tripleTryOpenSheet("","MU Responses");
  var mufrslri = FunctionContainer.tripleTryGetLastRow(mufrs);
  Utilities.sleep(5000);
  try{var lock = LockService.getScriptLock();lock.waitLock(50000);}catch(lockError){console.log(lockError)};
  
  var mufrscv = FunctionContainer.tripleTryGetValues(mufrs,mufrslri,1,1,80)[0];
  //FunctionContainer.positionsInsideArray(mufrscv);
  
  /*
  [Timestamp[0], Email Address[1], Code[2], Update form lists? (forms will turn off while they are updating)[3], 
    Type of Update[4], **no longer used**[5], New Rank[6], Date of Rank Change[7], Reasoning For Rank Change[8], 
    Is the Previous Credential a Full Credential or Learning Credential?[9], Previous Credential[10], 
    Is the New Credential a Full Credential or Learning Credential?[11], New Credential[12], Date of Credential Change[13], 
    Reasoning For Credential Change[14], Previous Group[15], New Group[16], Date of Group Change[17], 
    Reasoning For Group Change[18], Date of Report[19], Report Title[20], Report Details[21], Date of Discharge[22], 
    Reasoning For Discharge[23], New GT[24], Date of GT Change[25], Reasoning For GT Change[26], 
    New Discord Nickname (EX: Old discord nickname: "[099 - Water Boy] Dunce" ~ Desired discord nickname: "[099 - Water Boy] Deez" ~ you will put only "Deez" in this question)[27], 
    Date of Discord Nickname Change[28], Reasoning For Discord Nickname Change[29], 
    General Availability (ET) (Choose all squares that the member is available normally) [Sunday][30], 
    General Availability (ET) (Choose all squares that the member is available normally) [Monday][31], 
    General Availability (ET) (Choose all squares that the member is available normally) [Tuesday][32], 
    General Availability (ET) (Choose all squares that the member is available normally) [Wednesday][33], 
    General Availability (ET) (Choose all squares that the member is available normally) [Thrusday][34], 
    General Availability (ET) (Choose all squares that the member is available normally) [Friday][35], 
    General Availability (ET) (Choose all squares that the member is available normally) [Saturday][36], 
    Date of Availability Change[37], Reasoning For Availability Change[38], Leaving or Returning?[39], Start Date of LOA[40], 
    Expected Return Date (if there is none leave blank)[41], Reasoning[42], End Date of LOA (day they returned)[43], 
    Reasoning[44], Date of Birthday Change[45], Month[46], Day[47], Reasoning[48], Date of Mentor Change[49], Operation[50], 
    Mentor in Question[51], Reasoning[52], New Position Code[53], Date of Position Code Change[54], Reasoning[55], 
    Date of Reprimand[56], Severity of Reprimand[57], Reasoning[58], Group Selection[59], Member in Question[60], 
    Member in Question[61], Member in Question[62], Member in Question[63], Member in Question[64], Member in Question[65], 
    Member in Question[66], Member in Question[67], Member in Question[68], Member in Question[69], Member in Question[70], 
    Member in Question[71], Member in Question[72], [73], [74], [75], [76], [77], [78], [79]]
  */
  
  
  //Phoenix Member Data Current Members Sheet
  var curVals = FunctionContainer.getpmdcmscv();
  var pmdcms = curVals[0];
  var pmdcmscv = curVals[1];
  curVals = undefined;
  
  
  // Data Lists Lists Sheet
  curVals = FunctionContainer.getdllscv();
  var dlls = curVals[0];
  var dllscv = curVals[1];
  curVals = undefined;
  
  
  //member update form dates sheet
  var mufds = FunctionContainer.tripleTryOpenSheet("","MU Dates");
  
  
  //current date number
  var cdNum = dllscv[10][1];
  
  
  //dischargeCheck
  var dischargeCheck = "N";
  
  
  //gets perp
  var perpitraitor = FunctionContainer.perpFinder(mufrscv[1].toString().trim(), pmdcmscv);
  
  
  //trims everything and checks for illegal characters
  var formTrimList = [1,2,8,14,18,20,21,23,24,26,27,29,38,44,47,48,52,53,55,57,58];
  for(var i=0; i<formTrimList.length; i+=1){//start 1st for
    
    if(mufrscv[formTrimList[i]] === " "){//end 1st if
      new Error('Form filled out wrong');
    }//end 1st if
    
    mufrscv[formTrimList[i]] = mufrscv[formTrimList[i]].toString().trim();
    
    //if there is any special characters that cannot be used it sends an error message
    if(mufrscv[formTrimList[i]].indexOf("~") !== -1  ||  mufrscv[formTrimList[i]].indexOf("^") !== -1){//end 1st if
      new Error('Form filled out wrong');
    }//end 1st if
    
  }//end 1st for
  
  
  
  
  //** DATA GATHERING **//
  
  //type of update
  var typeOfUpdate = mufrscv[4].toString();
  
  
  //all ids of questions that contain the member in question
  var memberInQuestionIds = [[60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72]];
  
  //member in question
  var memberInQuestion = [];
  for(var i=0; i<memberInQuestionIds.length; i+=1){
    if(mufrscv[memberInQuestionIds[i]].toString()!==""&&mufrscv[memberInQuestionIds[i]].toString()!=="N/A"){
      memberInQuestion.push(mufrscv[memberInQuestionIds[i]].toString());
      i = memberInQuestionIds.length;
    }//end 2nd if
    else if(i===memberInQuestionIds.length-1){//start 2nd if/else
      memberInQuestion = "N/A";
    }//end 2nd if/else
  }//end 1st for
  
  //gets rid of duplicates and turns it into a string if it doesnt = ""
  if(memberInQuestion!=="N/A"){//start 1st if
    memberInQuestion = FunctionContainer.arrayDuplicateFilter(memberInQuestion);
    memberInQuestion = memberInQuestion.toString();
  }//end 1st if
  
  
  //email check
  //sends error if perp is ???
  if(perpitraitor==="???"){//start 2nd if
    new Error('Form filled out wrong');
  }//end 2nd if
  
  
  //finds all needed info
  for(var i=0; i<pmdcmscv.length; i+=1){//start 1st for
    if(pmdcmscv[i][0].toString()===memberInQuestion){//start 2nd if
      var memberRowNum = i+2;
      var currentNickname = FunctionContainer.getDiscordNicknameWithRow(i, dllscv, pmdcmscv);
      var curNick = pmdcmscv[i][1].toString();
      var currentRank = pmdcmscv[i][2].toString();
      var currentGroups = FunctionContainer.splitEmUp(pmdcmscv[i][3].toString());
      var currentCreds = FunctionContainer.splitEmUp(pmdcmscv[i][4].toString());
      var currentGen = pmdcmscv[i][5].toString();
      var currentPermissions = FunctionContainer.splitEmUp(pmdcmscv[i][6].toString());
      var currentPositionCode = pmdcmscv[i][7].toString();
      var currentStatus = pmdcmscv[i][8].toString();
      var currentEmail = pmdcmscv[i][9].toString();
      var currentProfileIds = FunctionContainer.splitEmUp(pmdcmscv[i][10].toString());
      var currentProfileUrls = FunctionContainer.splitEmUp(pmdcmscv[i][11].toString());
      var currentProfileFolderIds = FunctionContainer.splitEmUp(pmdcmscv[i][12].toString());
      var currentMentor = pmdcmscv[i][25].toString();
      var currentBirthday = pmdcmscv[i][26].toString();
    }//end 2nd if
  }//end 1st for
  

  //rank change
  if(typeOfUpdate === "Rank Change"){//start 1st if
    //New Rank[6], Date of Rank Change[7], Reasoning For Rank Change[8],
    var newRank = mufrscv[6];
    var dateOfUpdate = FunctionContainer.dateRetrieval(mufrscv[7]);
    var reasoning = mufrscv[8];
    var updateDetails = "Previous Rank: " + currentRank + " ~ New Rank: " + newRank;
    var updateDetailsDiscordVersion = "Previous Rank: __" + currentRank + "__ ~ New Rank: __" + newRank + "__";
    var errorInfo = "\n\n • Member in Question:** " + memberInQuestion + "**\n\n • Update Type:** " 
      + typeOfUpdate + "**\n\n • Date of Change:** " + dateOfUpdate + "**\n\n • New Rank:** " 
      + newRank + "**\n\n • Reasoning:** " + reasoning + "**";
  }//end 1st if

  //Credential change
  else if(typeOfUpdate === "Credential Change"){//start 1st if/else
    //Is the Previous Credential a Full Credential or Learning Credential?[9], Previous Credential[10], 
    //Is the New Credential a Full Credential or Learning Credential?[11], New Credential[12], 
    //Date of Credential Change[13], Reasoning For Credential Change[14]
    var fullOrLearnPreviousCred = mufrscv[9];
    if(fullOrLearnPreviousCred === "N/A"  ||  fullOrLearnPreviousCred === "Full"){//start 2nd if
      var previousCred = mufrscv[10];
    }//end 2nd if
    else if(fullOrLearnPreviousCred === "U/I"){//start 2nd if
      var previousCred = mufrscv[10]+" U/I";
    }//end 2nd if
    var fullOrLearnNewCred = mufrscv[11];
    if(fullOrLearnNewCred === "N/A"  ||  fullOrLearnNewCred === "Full"){//start 2nd if
      var newCred = mufrscv[12];
    }//end 2nd if
    else if(fullOrLearnNewCred === "U/I"){//start 2nd if
      var newCred = mufrscv[12]+" U/I";
    }//end 2nd if
    var dateOfUpdate = FunctionContainer.dateRetrieval(mufrscv[13]);
    var reasoning = mufrscv[14];
    var updateDetails = "Previous Credential: " + previousCred + " ~ New Credential: " + newCred;
    var updateDetailsDiscordVersion = "Previous Credential: __" + previousCred + "__ ~ New Credential: __" + newCred + "__";
    var errorInfo = "\n\n • Member in Question:** " + memberInQuestion + "**\n\n • Update Type:** " 
      + typeOfUpdate + "**\n\n • Date of Change:** " + dateOfUpdate + "**\n\n • Previous Credential:** " 
      + previousCred + "**\n\n • New Credential:** " + newCred + "**\n\n • Reasoning:** " + reasoning + "**";
  }//end 1st if/else

  //Group Change
  else if(typeOfUpdate === "Group Change"){//start 1st if/else
    //Previous Group[15], New Group[16], Date of Group Change[17], Reasoning For Group Change[18]
    var previousGroup = mufrscv[15];
    var newGroup = mufrscv[16];
    var dateOfUpdate = FunctionContainer.dateRetrieval(mufrscv[17]);
    var reasoning = mufrscv[18];
    var updateDetails = "Previous Group: "+previousGroup+" ~ New Group: "+newGroup;
    var updateDetailsDiscordVersion = "Previous Group: __" + previousGroup + "__ ~ New Group: __" + newGroup + "__";
    var errorInfo = "\n\n • Member in Question:** " + memberInQuestion + "**\n\n • Update Type:** " 
      + typeOfUpdate + "**\n\n • Date of Change:** " + dateOfUpdate + "**\n\n • Previous Group:** " 
      + previousGroup + "**\n\n • New Group:** " + newGroup + "**\n\n • Reasoning:** " + reasoning + "**";
  }//end 1st if/else

  //Member Report
  else if(typeOfUpdate === "Member Report"){//start 1st if/else
    //Date of Report[19], Report Title[20], Report Details[21]
    var dateOfUpdate = FunctionContainer.dateRetrieval(mufrscv[19]);
    var reasoning = "Report Details: "+mufrscv[21];
    var updateDetails = "Report Title: "+mufrscv[20];
    var updateDetailsDiscordVersion = mufrscv[20];
    var errorInfo = "\n\n • Member in Question:** " + memberInQuestion + "**\n\n • Update Type:** " 
      + typeOfUpdate + "**\n\n • Date of Change:** " + dateOfUpdate + "**\n\n • Report Title:** " 
      + mufrscv[21] + "**\n\n • Report Details:** " + mufrscv[20] + "**";
  }//end 1st if/else

  //Member Discharge
  else if(typeOfUpdate === "Member Discharge"){//start 1st if/else
    //Date of Discharge[22], Reasoning For Discharge[23]
    var dateOfUpdate = FunctionContainer.dateRetrieval(mufrscv[22]);
    var reasoning = mufrscv[23];
    var updateDetails = "Discharging Member From Lacedaemon";
    var errorInfo = "\n\n • Member in Question:** " + memberInQuestion + "**\n\n • Update Type:** " 
      + typeOfUpdate + "**\n\n • Date of Change:** " + dateOfUpdate + "**\n\n • Reasoning:** " + reasoning + "**";
    var updateDetailsDiscordVersion = "Discharging Member From Lacedaemon";
  }//end 1st if/else

  //Gamertag Change
  else if(typeOfUpdate === "Gamertag Change"){//start 1st if/else
    //New GT[24], Date of GT Change[25], Reasoning For GT Change[26]
    var newGt = mufrscv[24];
    var dateOfUpdate = FunctionContainer.dateRetrieval(mufrscv[25]);
    var reasoning = mufrscv[26];
    var updateDetails = "Previous GT: " + memberInQuestion + " ~ New GT: " + newGt;
    var errorInfo = "\n\n • Member in Question:** " + memberInQuestion + "**\n\n • Update Type:** " 
      + typeOfUpdate + "**\n\n • Date of Change:** " + dateOfUpdate + "**\n\n • New Gamertag:** " 
      + newGt + "**\n\n • Reasoning:** " + reasoning + "**";
    var updateDetailsDiscordVersion = "Previous GT: __" + memberInQuestion + "__ ~ New GT: __" + newGt + "__";
  }//end 1st if/else

  //Discord Nickname Change
  else if(typeOfUpdate === "Discord Nickname Change"){//start 1st if/else
    //New Discord Nickname[27], Date of Discord Nickname Change[28], Reasoning For Discord Nickname Change[29], 
    var newNickname = mufrscv[27];
    var dateOfUpdate = FunctionContainer.dateRetrieval(mufrscv[28]);
    var reasoning = mufrscv[29];
    var updateDetails = "Previous Nickname: " + curNick + " ~ New Nickname: " + newNickname;
    var errorInfo = "\n\n • Member in Question:** " + memberInQuestion + "**\n\n • Update Type:** " 
      + typeOfUpdate + "**\n\n • Date of Change:** " + dateOfUpdate + "**\n\n • New Discord Nickname:** " 
      + newNickname + "**\n\n • Reasoning:** " + reasoning + "**";
    var updateDetailsDiscordVersion = "Previous Nickname: __" + curNick + "__ ~ New Nickname: __" + newNickname + "__";
  }//end 1st if/else

  //Availability Change
  else if(typeOfUpdate === "Availability Change"){//start 1st if/else
    //General Availability (ET) (Choose all squares that the member is available normally) [Sunday][30], 
    //General Availability (ET) (Choose all squares that the member is available normally) [Monday][31], 
    //General Availability (ET) (Choose all squares that the member is available normally) [Tuesday][32], 
    //General Availability (ET) (Choose all squares that the member is available normally) [Wednesday][33], 
    //General Availability (ET) (Choose all squares that the member is available normally) [Thrusday][34], 
    //General Availability (ET) (Choose all squares that the member is available normally) [Friday][35], 
    //General Availability (ET) (Choose all squares that the member is available normally) [Saturday][36], 
    //Date of Availability Change[37], Reasoning For Availability Change[38]
    var dateOfUpdate = FunctionContainer.dateRetrieval(mufrscv[37]);
    var reasoning = mufrscv[38];
    var errorInfo = "\n\n • Member in Question:** " + memberInQuestion + "**\n\n • Update Type:** " 
      + typeOfUpdate + "**\n\n • Date of Change:** " + dateOfUpdate + "**\n\n • New GA:** " 
      + "**\n\n • Sunday:** " + mufrscv[30].toString() + "**\n\n • Monday:** " + mufrscv[31].toString()
      + "**\n\n • Tuesday:** " + mufrscv[32].toString() + "**\n\n • Wednesday:** " + mufrscv[33].toString()
      + "**\n\n • Thursday:** " + mufrscv[34].toString() + "**\n\n • Friday:** " + mufrscv[35].toString()
      + "**\n\n • Saturday:** " + mufrscv[36].toString()
      + "**\n\n • Reasoning:** " + reasoning + "**";
    var newGA = [];
    //Sunday
    newGA.push(mufrscv[30].toString());
    //Monday
    newGA.push(mufrscv[31].toString());
    //Tuesday
    newGA.push(mufrscv[32].toString());
    //Wednesday
    newGA.push(mufrscv[33].toString());
    //Thursday
    newGA.push(mufrscv[34].toString());
    //Friday
    newGA.push(mufrscv[35].toString());
    //Saturday
    newGA.push(mufrscv[36].toString());
    var updateDetails = "New Days Available";
    var daysOfWeek = ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];
    //cycles thru newGA to see what days they are available
    for(var i=0; i<newGA.length; i+=1){//start 1st for
      //is available
      if(newGA[i].toString()!==""){//start 2nd if
        updateDetails = updateDetails+" ~ "+daysOfWeek[i]+": Yes";
      }//end 2nd if
      //is not available
      else if(newGA[i].toString()===""){//start 2nd if
        updateDetails = updateDetails+" ~ "+daysOfWeek[i]+": No";
      }//end 2nd if
    }//end 1st for
    var updateDetailsDiscordVersion = updateDetails;
  }//end 1st if/else

  //Leaving on loa
  else if(typeOfUpdate === "LOA"  &&  mufrscv[39] === "Leaving"){//start 1st if/else
    //Leaving or Returning?[39], Start Date of LOA[40], Expected Return Date (if there is none leave blank)[41], 
    //Reasoning[42]
    var dateOfUpdate = FunctionContainer.dateRetrieval(mufrscv[40]);
    var expectedReturnDate = FunctionContainer.dateReplace(mufrscv[41]);
    if(expectedReturnDate===""){//start 2nd if
      expectedReturnDate = "N/A";
    }//end 2nd if
    var reasoning = mufrscv[42];
    var updateDetails = "Leaving on LOA Starting on: " + dateOfUpdate + " ~ Expected Return Date: " + expectedReturnDate;
    var errorInfo = "\n\n • Member in Question:** " + memberInQuestion + "**\n\n • Update Type:** " 
      + typeOfUpdate + "**\n\n • Date of Change:** " + dateOfUpdate + "**\n\n • LOA Type:** " 
      + mufrscv[63] + "**\n\n • Expected Date of Return:** " + expectedReturnDate
      + "**\n\n • Reasoning:** " + reasoning + "**";
    var updateDetailsDiscordVersion = "Leaving on LOA Starting on: __" + dateOfUpdate + "__ ~ Expected Return Date: __" + expectedReturnDate + "__";
  }//end 1st if/else

  //Returning from loa
  else if(typeOfUpdate === "LOA"  &&  mufrscv[39] === "Returning"){//start 1st if/else
    //End Date of LOA (day they returned)[43], Reasoning[44]
    var dateOfUpdate = FunctionContainer.dateRetrieval(mufrscv[43]);
    var reasoning = mufrscv[44];
    var updateDetails = "Returned from LOA as of: " + dateOfUpdate;
    var errorInfo = "\n\n • Member in Question:** " + memberInQuestion + "**\n\n • Update Type:** " 
      + typeOfUpdate + "**\n\n • Date Returned:** " + dateOfUpdate + "**\n\n • Reasoning:** " + reasoning + "**";
    var updateDetailsDiscordVersion = "Returned from LOA as of: __" + dateOfUpdate + "__";
  }//end 1st if/else

  //Birthday Change
  else if(typeOfUpdate === "Birthday Change"){//start 1st if/else
    //Date of Birthday Change[45], Month[46], Day[47], Reasoning[48]
    var dateOfUpdate = FunctionContainer.dateRetrieval(mufrscv[45]);
    var bMonth = mufrscv[46];
    var bDay = mufrscv[47];
    var bMonthAndDay = bMonth + " " + bDay;
    var reasoning = mufrscv[48];
    //not blank current bday
    if(currentBirthday === ""){//start 1st if
      var updateDetails = "Previous Birthday: " + currentBirthday + " ~ New Birthday: " + bMonthAndDay;
      var updateDetailsDiscordVersion = "Previous Birthday: __" + currentBirthday + "__ ~ New Birthday: __" + bMonthAndDay + "__";
    }//end 1st if
    else{//start 1st else
      var updateDetails = "Previous Birthday: N/A ~ New Birthday: " + bMonthAndDay;
      var updateDetailsDiscordVersion = "Previous Birthday: __N/A__ ~ New Birthday: __" + bMonthAndDay + "__";
    }//end 1st else
    var errorInfo = "\n\n • Member in Question:** " + memberInQuestion + "**\n\n • Update Type:** " 
      + typeOfUpdate + "**\n\n • Date of Update:** " + dateOfUpdate + "**\n\n • Month:** " + bMonth
      + "**\n\n • Day:** " + bDay + "**\n\n • Reasoning:** " + reasoning + "**";
  }//end 1st if/else

  //Mentor Change
  else if(typeOfUpdate === "Mentor Change"){//start 1st if/else
    //Date of Mentor Change[49], Operation[50], Mentor in Question[51], Reasoning[52]
    var dateOfUpdate = FunctionContainer.dateRetrieval(mufrscv[49]);
    var operation = mufrscv[50];
    var mentor = mufrscv[51];
    var reasoning = mufrscv[52];
    //blank mentor
    if(currentMentor === ""){//start 2nd if
      var curMent = "N/A";
    }//end 2nd if
    //not blank mentor
    else{var curMent = currentMentor}
    //makes the update details look fancy depending on rewmoving or adding mentor
    if(operation === "Add Mentor"){//start 2nd if
      var updateDetails = "Previous Mentor: " + curMent + " ~ New Mentor: " + mentor;
      var updateDetailsDiscordVersion = "Previous Mentor: __" + curMent + "__ ~ New Mentor: __" + mentor + "__";
    }//end 2nd if
    else if(operation === "Remove Mentor"){//start 2nd if/else
      var updateDetails = "Previous Mentor: " + curMent + " ~ New Mentor: N/A";
      var updateDetailsDiscordVersion = "Previous Mentor: __" + curMent + "__ ~ New Mentor: __N/A__";
    }//end 2nd if/else
    var errorInfo = "\n\n • Member in Question:** " + memberInQuestion + "**\n\n • Update Type:** " 
      + typeOfUpdate + "**\n\n • Date of Update:** " + dateOfUpdate + "**\n\n • Mentor:** " + mentor
      + "**\n\n • Reasoning:** " + reasoning + "**";
  }//end 1st if/else

  //Position Code Change
  else if(typeOfUpdate === "Position Code Change"){//start 1st if/else
    //New Position Code[53], Date of Position Code Change[54], Reasoning[55]
    var dateOfUpdate = FunctionContainer.dateRetrieval(mufrscv[54]);
    var newPC = mufrscv[53];
    var newFullPC = FunctionContainer.positionCodeDiscordTransformer(newPC);
    var reasoning = mufrscv[55];
    //blank pc
    if(currentPositionCode === ""){//start 2nd if
      var curPC = "N/A";
    }//end 2nd if
    //not blank pc
    else{var curPC = FunctionContainer.positionCodeDiscordTransformer(currentPositionCode)}
    var updateDetails = "Previous Position Code: " + curPC + " ~ New Position Code: " + newPC;
    var updateDetailsDiscordVersion = "Previous Position Code: __" + curPC + "__ ~ New Position Code: __" + newPC + "__";
    var errorInfo = "\n\n • Member in Question:** " + memberInQuestion + "**\n\n • Update Type:** " 
      + typeOfUpdate + "**\n\n • Date of Update:** " + dateOfUpdate + "**\n\n • Position Code:** " + newFullPC
      + "**\n\n • Reasoning:** " + reasoning + "**";
  }//end 1st if/else

  //Reprimand
  else if(typeOfUpdate === "Reprimand"){//start 1st if/else
    //Date of Reprimand[56], Severity of Reprimand[57], Reasoning[58]
    var dateOfUpdate = FunctionContainer.dateRetrieval(mufrscv[56]);
    var severity = mufrscv[57];
    var reasoning = mufrscv[58];
    var updateDetails = "Severity of Reprimand(1-5): " + severity;
    var updateDetailsDiscordVersion = "Severity of Reprimand(1-5): __" + severity + "__";
    var errorInfo = "\n\n • Member in Question:** " + memberInQuestion + "**\n\n • Update Type:** " 
      + typeOfUpdate + "**\n\n • Date of Update:** " + dateOfUpdate + "**\n\n • Severity of Reprimand:** " + severity
      + "**\n\n • Reasoning:** " + reasoning + "**";
  }//end 1st if/else
  
  
  
//  Logger.log(ree);
  //** CHECKS AND DATA CHANGING **//
  
  //checks to see if member is N/A or ""
  if(memberInQuestion==="N/A"||memberInQuestion===""||memberRowNum===undefined){//start 1st if
    new Error('Form filled out wrong');
  }//end 1st if
  
  
  //code check
  if(FunctionContainer.formCodeCheck(dllscv, "muf", mufrscv[2].toString())){//start 1st if
    
    //rank change
    if(typeOfUpdate === "Rank Change"){//start 2nd if
      
      //checks to see if previous rank is same as new rank
      if(currentRank===newRank){//end 3rd if
        new Error('Form filled out wrong');
      }//end 3rd if
      
    }//end 2nd if
    
    
    //Credential change
    else if(typeOfUpdate === "Credential Change"){//start 2nd if/else
      
      //checks to see if both are N/A and sends error if so
      if(newCred==="N/A"&&previousCred==="N/A"){//end 3rd if
        new Error('Form filled out wrong');
      }//end 3rd if
      
      //checks to see if both are the same and sends error if so
      if(newCred===previousCred){//end 3rd if
        new Error('Form filled out wrong');
      }//end 3rd if
      
      //checks to see if new cred is already held by member or if member doesnt have cred they are trying to get rid of
      for(var i=0; i<currentCreds.length; i+=1){//start 1st for
        if(newCred === currentCreds[i].toString()){//end 3rd if
          new Error('Form filled out wrong');
        }//end 3rd if
        if(previousCred !== "N/A"  &&  i === currentCreds.length-1  &&  previousCred !== currentCreds[i].toString()){//end 3rd if
          new Error('Form filled out wrong');
        }//end 3rd if
      }//end 1st for
      
    }//end 2nd if/else
    
    
    //Group Change
    else if(typeOfUpdate === "Group Change"){//start 2nd if/else
      
      //checks to see if both are N/A and sends error if so
      if(newGroup === "N/A"  &&  previousGroup === "N/A"){//end 3rd if
        new Error('Form filled out wrong');
      }//end 3rd if
      
      //checks to see if both are the same and sends error if so
      if(newGroup === previousGroup){//end 3rd if
        new Error('Form filled out wrong');
      }//end 3rd if
      
      //checks to see if new group is already held by member or if member doesnt have cred they are trying to get rid of
      for(var i=0; i<currentGroups.length; i+=1){//start 1st for
        if(newGroup === currentGroups[i].toString()){//end 3rd if
          new Error('Form filled out wrong');
        }//end 3rd if
        if(previousGroup !== "N/A"  &&  i === currentGroups.length-1  &&  previousGroup !== currentGroups[i].toString()){//end 3rd if
          new Error('Form filled out wrong');
        }//end 3rd if
      }//end 1st for
      
      //checks to see if it's trying to take away the only group they have
      if(currentGroups.length === 1  &&  newGroup === "N/A"){//start 3rd if
        new Error('Form filled out wrong');
      }//end 3rd if
      
    }//end 2nd if/else
    
    
    //Member Discharge
    else if(typeOfUpdate === "Member Discharge"){//start 2nd if/else
      
    }//end 2nd if/else
    
    
    //Gamertag Change
    else if(typeOfUpdate === "Gamertag Change"){//start 2nd if/else
      //checks to see if gt is already taken or apart of someone else's and if not sends error
      for(var i=0; i<pmdcmscv.length; i+=1){//start 1st for
        if(pmdcmscv[i][0].toString().indexOf(newGt) !== -1  &&  i !== memberRowNum-2){//start 3rd if
          new Error('Form filled out wrong');
        }//end 3rd if
      }//end 1st for
    
      //if gamertag is the same as any of the group names
      for(var i=0; i<57; i+=1){//start 1st for
        //sends error if gamertag = group name
        if(newGt.toString()===dllscv[40][i].toString()){//start 2nd if
          new Error('Form filled out wrong');
        }//end 2nd if
      }//end 1st for
      
      //checks to see the gt is already the same as it used to be
      if(memberInQuestion===newGt){//start 3rd if
        new Error('Form filled out wrong');
      }//end 3rd if
      
      //sends error if gamertag is N/A
      if(newGt==="N/A"){//start 2nd if
        new Error('Form filled out wrong');      }//end 2nd if
      
      //sends error if gamertag is longer than 17 characters
      if(newGt.length>17){//start 2nd if
        new Error('Form filled out wrong');
      }//end 2nd if
      
      //sends error if gamertag has a comma
      if(newGt.toString().indexOf(",")!==-1){//start 2nd if
        new Error('Form filled out wrong');
      }//end 2nd if
      
    }//end 2nd if/else
    
    
    //Discord Nickname Change
    else if(typeOfUpdate === "Discord Nickname Change"){//start 2nd if/else
      //checks to see if nickname is already taken and if not sends error
      for(var i=0; i<pmdcmscv.length; i+=1){//start 1st for
        if(i!==memberRowNum-2){//start 3rd if
          if(pmdcmscv[i][1].toString()===newNickname||pmdcmscv[i][0].toString()===newNickname){//start 4th if
            new Error('Form filled out wrong');
          }//end 4th if
        }//end 3rd if
      }//end 1st for
      
      //checks to see the nickname is already the same as it used to be
      if(curNick===newNickname){//start 3rd if
        new Error('Form filled out wrong');
      }//end 3rd if
      
      //sends error if nickname is N/A
      if(newNickname==="N/A"){//start 2nd if
        new Error('Form filled out wrong');
      }//end 2nd if
      
      //sends error if nickname is longer than 17 characters
      if(newNickname.length>17){//start 2nd if
        new Error('Form filled out wrong');
      }//end 2nd if
      
      //sends error if nickname has a comma
      if(newNickname.toString().indexOf(",")!==-1){//start 2nd if
        new Error('Form filled out wrong');
      }//end 2nd if
      
      //sends error if nickname has a comma
      if(newNickname.toString().indexOf("]") !== -1  ||  newNickname.toString().indexOf("[") !== -1){//start 2nd if
        new Error('Form filled out wrong');
      }//end 2nd if
    }//end 2nd if/else
    
    
    //Availability Change
    else if(typeOfUpdate === "Availability Change"){//start 2nd if/else
    }//end 2nd if/else
    
    
    //Leaving on loa
    else if(typeOfUpdate === "LOA"  &&  mufrscv[39] === "Leaving"){//start 2nd if/else
      //if member is already on loa
      if(currentStatus==="LOA"){//start 3rd if
        new Error('Form filled out wrong');
      }//end 3rd if
      
      //checks for a date in the past
      if(expectedReturnDate!=="N/A"){//start 4th if
        var expectedReturnDateNum = mufds.getRange(1,1).setValue(expectedReturnDate).setNumberFormat('#,##0.00').getValue();
        if(expectedReturnDateNum<cdNum){//start 5th if
          new Error('Form filled out wrong');
        }//end 5th if
      }//end 4th if
    }//end 2nd if/else
    
    
    //Returning from loa
    else if(typeOfUpdate === "LOA"  &&  mufrscv[39] === "Returning"){//start 2nd if/else
      //if member is not on loa
      if(currentStatus!=="LOA"){//start 4th if
          new Error('Form filled out wrong');
        }//end 4th if
    }//end 2nd if/else
    
    
    //Returning from loa
    else if(typeOfUpdate === "Birthday Change"){//start 2nd if/else
      //if their cur bday matches new bday
      if(bMonthAndDay === currentBirthday){//start 3rd if
          new Error('Form filled out wrong');
      }//end 3rd if
    }//end 2nd if/else
    
    
    //Mentor Change
    else if(typeOfUpdate === "Mentor Change"){//start 2nd if/else
      //if mentor and member in question are the same person
      if(mentor === memberInQuestion){//start 3rd if
          new Error('Form filled out wrong');
      }//end 3rd if
      
      //if they are trying to remove a mentor that doesn't mentor the member in question
      if(operation === "Remove Mentor"  &&  mentor !== currentMentor){//start 3rd if
          new Error('Form filled out wrong');
      }//end 3rd if
      
      //if they are trying to add a mentor when the member already has one
      if(operation === "Add Mentor"  &&  currentMentor !== ""){//start 3rd if
          new Error('Form filled out wrong');
      }//end 3rd if
    }//end 2nd if/else
    
    
    //Position Code Change
    else if(typeOfUpdate === "Position Code Change"){//start 2nd if/else
      //if new pc is already taken
      for(var i=0; i<pmdcmscv.length; i+=1){//start 1st for
        if(FunctionContainer.positionCodeDiscordTransformer(pmdcmscv[i][7].toString()) === newFullPC  &&  newFullPC !== "N/A"){//start 1st if
          new Error('Form filled out wrong');
        }//end 1st if
      }//end 1st for
      
      //if new pc isn't a number and isnt N/A
      if("N/A" !== newFullPC  &&  isNaN(newFullPC)){//start 3rd if
          new Error('Form filled out wrong');
      }//end 3rd if
      
    }//end 2nd if/else
    
    
    
    
    //** FORM LIST UPDATES **//
    //updates form lists if yes is chosen or gamertag is chosen
    if(mufrscv[3].toString() === "Yes"  ||  typeOfUpdate === "Gamertag Change"){//start 2nd if
      //wait 25 seconds
      Utilities.sleep(25000);
      
      //updates all forms apart of list 2
      FunctionContainer.updateAllFormLists2(dllscv, pmdcmscv);
    }//end 2nd if
    
    
  }//end 1st if
  
  
  //if code is wrong
  else{
    new Error('Form filled out wrong');
  }//end 1st else
  
  
}//end main