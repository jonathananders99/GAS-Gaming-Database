function debriefFormListUpdate(){
  errorCheck("4:05",10,"debriefFormListUpdate","DebriefFormListUpdate");
}//end debriefFormListUpdate


function errorCheck(time,col,functionName,projectName){
  try{main();triggerCreator(time,col,functionName);}//end 1st try
  catch(error){console.log(error);
    if(error.name.toString()==="Exception"&&error.message.toString().indexOf("a server error occurred")!==-1){
      try{Utilities.sleep(5000);triggerCreator(time,col,functionName);}//end 2nd try
      catch(error){console.log(error);
        if(error.name.toString()==="Exception"&&error.message.toString().indexOf("a server error occurred")!==-1){
          try{Utilities.sleep(5000);triggerCreator(time,col,functionName);}//end 3rd try
          catch(error){console.log(error);
            FunctionContainer.discErrorReport(error,functionName,projectName);}}//end 3rd catch
        else{FunctionContainer.discErrorReport(error,functionName,projectName);}}}//end 2nd catch
    else{FunctionContainer.discErrorReport(error,functionName,projectName);}}//end 1st catch
}//end errorCheck


function triggerCreator(ct,tColNum,scriptName){
  var datSheetOriginal=FunctionContainer.tripleTryOpenSheet("", "Dates");var cdd=datSheetOriginal.getRange(1,1,15,datSheetOriginal.getLastColumn()).getValues();var triggerChangesMade = [];var vals = [[],[],[],[],[],[],[],[],[],[],[]];
  triggerChangesMade.push("Old Trigger Id's and Dates:\nTrigger ID: "+cdd[9][tColNum-1].toString()+" For Date: "+cdd[1][tColNum-1].toString()+" ~\nTrigger ID: "+cdd[10][tColNum-1].toString()+" For Date: "+cdd[4][tColNum-1].toString()+" ~\nTrigger ID: "+cdd[11][tColNum-1].toString()+" For Date: "+cdd[5][tColNum-1].toString());
  if(FunctionContainer.dateReplace(cdd[1][tColNum-1].toString())===FunctionContainer.dateReplace(cdd[1][0].toString())&&FunctionContainer.dateReplace(cdd[4][tColNum-1].toString())===FunctionContainer.dateReplace(cdd[0][0].toString())&&FunctionContainer.dateReplace(cdd[5][tColNum-1].toString())===FunctionContainer.dateReplace(cdd[2][0].toString())){
    var t=ScriptApp.getProjectTriggers();for(var i=0;i<t.length;i++){if(t[i].getUniqueId()===cdd[9][tColNum-1].toString()){ScriptApp.deleteTrigger(t[i]);triggerChangesMade.push("\nTrigger Deleted ~ "+cdd[9][tColNum-1].toString()+" for date: "+cdd[1][tColNum-1].toString());}}
    var bruhX3 = cdd[3][0].toString();for(var iii = 0;iii<4;iii++){cdd[iii][0]=cdd[iii][0].toString()}var triggerTime="";var months=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
    for(var m=0;m<months.length;m++){if(bruhX3.indexOf(months[m].toString())!==-1){m=m+1;triggerTime = bruhX3[11].toString()+bruhX3[12].toString()+bruhX3[13].toString()+bruhX3[14].toString()+"-"+m+"-"+bruhX3[8].toString()+bruhX3[9].toString()+" "+ct;break}}
    var tt=datSheetOriginal.getRange(6,tColNum).setValue(triggerTime).setNumberFormat('M/d/yyyy H:mm:ss').getValue();var uniqueTriggerID = ScriptApp.newTrigger(scriptName).timeBased().at(tt).create().getUniqueId();triggerChangesMade.push("\nTrigger Added ~ "+uniqueTriggerID+" For Date: "+tt.toString());
    vals[0] = [cdd[4][tColNum-1]];vals[1] = [cdd[2][tColNum-1]];vals[2] = [cdd[3][tColNum-1]];vals[3] = [cdd[5][tColNum-1]];vals[4] = [tt];vals[5] = [cdd[6][tColNum-1]];vals[6] = [cdd[7][tColNum-1]];vals[7] = [cdd[8][tColNum-1]];
    vals[8] = [cdd[10][tColNum-1]];vals[9] = [cdd[11][tColNum-1]];vals[10] = [uniqueTriggerID];datSheetOriginal.getRange(2,tColNum,vals.length).setValues(vals);}
  else if(FunctionContainer.dateReplace(cdd[1][tColNum-1].toString())===FunctionContainer.dateReplace(cdd[0][0].toString())&&FunctionContainer.dateReplace(cdd[4][tColNum-1].toString())===FunctionContainer.dateReplace(cdd[2][0].toString())&&FunctionContainer.dateReplace(cdd[5][tColNum-1].toString())===FunctionContainer.dateReplace(cdd[3][0].toString())){triggerChangesMade.push("\nNo Trigger Changes Made");}
  else{var t=ScriptApp.getProjectTriggers();for(var i=0;i<t.length;i++){triggerChangesMade.push("\nTrigger Deleted ~ "+t[i].getUniqueId());ScriptApp.deleteTrigger(t[i]);}var cd=datSheetOriginal.getRange(1,1,4).getValues();
    for(var iii = 0;iii<4;iii++){cd[iii]=cd[iii].toString()}var triggerTime="";var months=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];for(var m=0;m<months.length;m++){if(cd[0].indexOf(months[m].toString())!==-1){
    m=m+1;triggerTime = cd[0][11].toString()+cd[0][12].toString()+cd[0][13].toString()+cd[0][14].toString()+"-"+m+"-"+cd[0][8].toString()+cd[0][9].toString()+" "+ct;break}}var tt=datSheetOriginal.getRange(2,tColNum).setValue(triggerTime).setNumberFormat('M/d/yyyy H:mm:ss').getValue();
    var uniqueTriggerID = ScriptApp.newTrigger(scriptName).timeBased().at(tt).create().getUniqueId();triggerChangesMade.push("\nTrigger Added ~ "+uniqueTriggerID+" For Date: "+tt.toString());vals[0] = [tt];vals[8] = [uniqueTriggerID];var triggerTime="";
    var months=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];for(var m=0;m<months.length;m++){if(cd[2].indexOf(months[m].toString())!==-1){m=m+1;triggerTime = cd[2][11].toString()+cd[2][12].toString()+cd[2][13].toString()+cd[2][14].toString()+"-"+m+"-"+cd[2][8].toString()+cd[2][9].toString()+" "+ct;break}}
    var tt=datSheetOriginal.getRange(5,tColNum).setValue(triggerTime).setNumberFormat('M/d/yyyy H:mm:ss').getValue();var uniqueTriggerID = ScriptApp.newTrigger(scriptName).timeBased().at(tt).create().getUniqueId();triggerChangesMade.push("\nTrigger Added ~ "+uniqueTriggerID+" For Date: "+tt.toString());
    vals[3] = [tt];vals[9] = [uniqueTriggerID];var triggerTime="";var months=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];for(var m=0;m<months.length;m++){if(cd[3].indexOf(months[m].toString())!==-1){m=m+1;
    triggerTime = cd[3][11].toString()+cd[3][12].toString()+cd[3][13].toString()+cd[3][14].toString()+"-"+m+"-"+cd[3][8].toString()+cd[3][9].toString()+" "+ct;break}}var tt=datSheetOriginal.getRange(6,tColNum).setValue(triggerTime).setNumberFormat('M/d/yyyy H:mm:ss').getValue();var uniqueTriggerID = ScriptApp.newTrigger(scriptName).timeBased().at(tt).create().getUniqueId();
    triggerChangesMade.push("\nTrigger Added ~ "+uniqueTriggerID+" For Date: "+tt.toString());vals[1] = [cdd[2][tColNum-1]];vals[2] = [cdd[3][tColNum-1]];vals[4] = [tt];vals[5] = [cdd[6][tColNum-1]];vals[6] = [cdd[7][tColNum-1]];vals[7] = [cdd[8][tColNum-1]];vals[10] = [uniqueTriggerID];datSheetOriginal.getRange(2,tColNum,vals.length).setValues(vals);}console.log(triggerChangesMade);
}//end triggerCreator


function main(){
  try{var lock = LockService.getScriptLock();lock.waitLock(150000);}catch(lockError){console.log(lockError)};
  
  
  //PXE Member Data Current Members Sheet
  var curVals = FunctionContainer.getpmdcmscv();
  var pmdcmscv = curVals[1];
  curVals = undefined;
  
  
  //Data Lists Lists Sheet
  curVals = FunctionContainer.getdllscv();
  var dllscv = curVals[1];
  curVals = undefined;
  
  
  formListUpdate(dllscv, pmdcmscv);
  
}//end main

function formListUpdate(dllscv, pmdcmscv){
  
  
  //Debrief Form
  var df = FormApp.openById(dllscv[85][0].toString());
//  FunctionContainer.getDaFormIds(dllscv[85][0].toString());
  
  
  //Forge Hub Active Maps sheet
  var curVals = FunctionContainer.getfhamscv("date", dllscv);
  var fhams = curVals[0];
  var fhamscv = curVals[1];
  curVals = undefined;


  //Which Discord Debrief Channel Do You Want to Include the Debriefing in?
  var groupDebriefChoices = [["N/A"],["Main Channel"]];
    
  for(var i=1; i<165; i+=13){
    for(var x=0; x<10; x+=1){//start 2nd for
      if(dllscv[x][i]==="Active"  &&  dllscv[66][dllscv[x][i+11]]==="Yes"){
        groupDebriefChoices.push([dllscv[x][i-1].toString()]);
      }//end 1st if
    }//end 2nd for
  }//end 2nd for
  
  df.getItemById("1436772545").asCheckboxItem().setChoiceValues(groupDebriefChoices);
  
  
  //All Date Questions
  var datesMinus7 = [[FunctionContainer.dateReplace(dllscv[10][0])+" (Today)"],
    [FunctionContainer.dateReplace(dllscv[10][21])+" (Yesterday)"],
    [FunctionContainer.dateReplace(dllscv[10][20])+" (2 Days ago)"],
    [FunctionContainer.dateReplace(dllscv[10][19])+" (3 Days ago)"],
    [FunctionContainer.dateReplace(dllscv[10][18])+" (4 Days ago)"],
    [FunctionContainer.dateReplace(dllscv[10][17])+" (5 Days ago)"],
    [FunctionContainer.dateReplace(dllscv[10][16])+" (6 Days ago)"]];
  
  df.getItemById("1075600827").asListItem().setChoiceValues(datesMinus7);
  
  
  //Map(s) Used
  var mapChoices = [];
  for(var i = 0; i<fhamscv.length; i+=1){
    mapChoices.push([fhamscv[i][0]]);
  }//end 1st for
  mapChoices = FunctionContainer.arrayDuplicateFilter(mapChoices);
  mapChoices.unshift(["N/A"]);
  df.getItemById("1240308448").asCheckboxItem().setChoiceValues(mapChoices);
  
  
  //Event Type(s)
  var EventTypes = [];
  for(var i = 1; i<100; i+=1){
    if(dllscv[14][i].toString()!==""){
      EventTypes.push([dllscv[14][i].toString()]);
    }//end 1st if
  }//end 1st for
  EventTypes = FunctionContainer.specialSort(EventTypes);
  df.getItemById("350865558").asCheckboxItem().setChoiceValues(EventTypes);
  
  
  //Participating Group(s)
  var participatingGroups = [];
  
  //Group Selection
  var groupSelectionChoices = [];
  var groupSelectionQuestion = df.getItemById("744877636").asMultipleChoiceItem();
  
  for(var i = 1; i<165; i+=13){
    //Group Selection
    if(dllscv[0][i]==="Active"){
      groupSelectionChoices.push(groupSelectionQuestion.createChoice(dllscv[0][i-1].toString(), df.getItemById(dllscv[0][i+2].toString()).asPageBreakItem()));
    }//end 1st if
    
    //Participating Group(s)
    for(var x = 0; x<10; x+=1){
      if(dllscv[x][i]==="Active"){
        participatingGroups.push([dllscv[x][i-1].toString()]);
      }//end 1st if
    }//end 2nd for
  }//end 1st for
  
  //Participating Group(s)
  df.getItemById("2117330255").asCheckboxItem().setChoiceValues(participatingGroups);
  
  //Group Selection
  groupSelectionQuestion.setChoices(groupSelectionChoices);
  
  
  //Leader of Event
  //Secondary Leader(s)
  //Attendees
  for(var i=1; i<165; i+=13){
    var allGroups = [];
    for(var x=0; x<10; x+=1){//start 2nd for
      if(dllscv[x][i].toString() === "Active"){//start 2nd if
        allGroups.push(dllscv[x][i-1].toString());
      }//end 2nd if
    }//end 2nd for
    var individualGroupChoices = [["N/A"]];
    //if group is active
    if(dllscv[0][i].toString() === "Active"){//start 1st if
      var questionIDs = FunctionContainer.splitEmUp(dllscv[0][i+3].toString());
      //cycles thru each member
      for(var x=0; x<pmdcmscv.length; x+=1){//start 2nd for
        var curMemberGroups = FunctionContainer.splitEmUp(pmdcmscv[x][3]);
        //cycles thru current member groups
        for(var y=0; y<curMemberGroups.length; y+=1){//start 3rd for
          //cycles thru all groups
          for(var w=0; w<allGroups.length; w+=1){//start 4th for
            //if cur member group contains all group
            if(curMemberGroups[y].toString().indexOf(allGroups[w].toString()) !== -1){//start 2nd if
              individualGroupChoices.push([pmdcmscv[x][0].toString()]);
            }//end 2nd if
          }//end 4th for
        }//end 3rd for
      }//end 2nd for
      individualGroupChoices = FunctionContainer.arrayDuplicateFilter(individualGroupChoices);
      df.getItemById(questionIDs[0]).asListItem().setChoiceValues(individualGroupChoices);
      df.getItemById(questionIDs[1]).asCheckboxItem().setChoiceValues(individualGroupChoices);
      df.getItemById(questionIDs[2]).asCheckboxItem().setChoiceValues(individualGroupChoices);
    }//end 1st if
  }//end 1st for
  
  
  /* Debrief Form
  [22-03-30 18:01:21:797 EDT] [Code, TEXT, 1100143144]
  [22-03-30 18:01:21:848 EDT] [Which Discord Debrief Channel Do You Want to Include the Debriefing in?, CHECKBOX, 1436772545]
  [22-03-30 18:01:21:894 EDT] [Date of Event (ET), LIST, 1075600827]
  [22-03-30 18:01:21:943 EDT] [Start Time (ET), TIME, 673790299]
  [22-03-30 18:01:21:987 EDT] [End Time (ET), TIME, 1691971925]
  [22-03-30 18:01:22:036 EDT] [Map(s) Used, CHECKBOX, 1240308448]
  [22-03-30 18:01:22:088 EDT] [Win/Loss, MULTIPLE_CHOICE, 582520309]
  [22-03-30 18:01:22:136 EDT] [Event Type(s), CHECKBOX, 350865558]
  [22-03-30 18:01:22:186 EDT] [Participating Group(s), CHECKBOX, 2117330255]
  [22-03-30 18:01:22:226 EDT] [Debrief, PARAGRAPH_TEXT, 1807153309]
  [22-03-30 18:01:22:269 EDT] [Additional Notes, PARAGRAPH_TEXT, 833431644]
  
  [22-03-30 18:01:22:312 EDT] [Group Selection, PAGE_BREAK, 814352609]
  [22-03-30 18:01:22:353 EDT] [Group Selection I, MULTIPLE_CHOICE, 744877636]
  
  [22-03-30 18:01:22:402 EDT] [Mora 1, PAGE_BREAK, 1633409710]
  [22-03-30 18:01:22:445 EDT] [Leader of Event, LIST, 693340624]
  [22-03-30 18:01:22:498 EDT] [Secondary Leader(s), CHECKBOX, 870768610]
  [22-03-30 18:01:22:541 EDT] [Attendees, CHECKBOX, 114720988]
  [22-03-30 18:01:22:583 EDT] [Include more members?, MULTIPLE_CHOICE, 492719538]
  
  [22-03-30 18:01:22:636 EDT] [Mora 2, PAGE_BREAK, 927581422]
  [22-03-30 18:01:22:688 EDT] [Leader of Event, LIST, 620783150]
  [22-03-30 18:01:22:728 EDT] [Secondary Leader(s), CHECKBOX, 694176995]
  [22-03-30 18:01:22:770 EDT] [Attendees, CHECKBOX, 828666469]
  [22-03-30 18:01:22:812 EDT] [Include more members?, MULTIPLE_CHOICE, 706228322]
  
  [22-03-30 18:01:22:852 EDT] [Mora 3, PAGE_BREAK, 1349842791]
  [22-03-30 18:01:22:904 EDT] [Leader of Event, LIST, 1633430335]
  [22-03-30 18:01:22:945 EDT] [Secondary Leader(s), CHECKBOX, 596758476]
  [22-03-30 18:01:22:987 EDT] [Attendees, CHECKBOX, 735429423]
  [22-03-30 18:01:23:029 EDT] [Include more members?, MULTIPLE_CHOICE, 229418834]
  
  [22-03-30 18:01:23:070 EDT] [Phoenix S.W.A.L, PAGE_BREAK, 2036072142]
  [22-03-30 18:01:23:111 EDT] [Leader of Event, LIST, 1304209602]
  [22-03-30 18:01:23:150 EDT] [Secondary Leader(s), CHECKBOX, 2095035431]
  [22-03-30 18:01:23:200 EDT] [Attendees, CHECKBOX, 434631355]
  [22-03-30 18:01:23:266 EDT] [Include more members?, MULTIPLE_CHOICE, 756000395]
  
  [22-03-30 18:01:23:332 EDT] [Upper Echelon, PAGE_BREAK, 1112065731]
  [22-03-30 18:01:23:372 EDT] [Leader of Event, LIST, 1391550393]
  [22-03-30 18:01:23:412 EDT] [Secondary Leader(s), CHECKBOX, 2126374947]
  [22-03-30 18:01:23:453 EDT] [Attendees, CHECKBOX, 413086862]
  [22-03-30 18:01:23:494 EDT] [Include more members?, MULTIPLE_CHOICE, 1267314413]
  
  [22-03-30 18:01:23:537 EDT] [Praetorian Guard, PAGE_BREAK, 1273308518]
  [22-03-30 18:01:23:583 EDT] [Leader of Event, LIST, 458547412]
  [22-03-30 18:01:23:624 EDT] [Secondary Leader(s), CHECKBOX, 1150307962]
  [22-03-30 18:01:23:668 EDT] [Attendees, CHECKBOX, 902163887]
  [22-03-30 18:01:23:712 EDT] [Include more members?, MULTIPLE_CHOICE, 1186412525]
  
  [22-03-30 18:01:23:755 EDT] [Seeker Intelligence, PAGE_BREAK, 2143115147]
  [22-03-30 18:01:23:798 EDT] [Leader of Event, LIST, 1872236138]
  [22-03-30 18:01:23:839 EDT] [Secondary Leader(s), CHECKBOX, 665459214]
  [22-03-30 18:01:23:883 EDT] [Attendees, CHECKBOX, 686627414]
  [22-03-30 18:01:23:923 EDT] [Include more members?, MULTIPLE_CHOICE, 1742173633]
  
  [22-03-30 18:01:23:965 EDT] [Vicarius Senate, PAGE_BREAK, 1698990715]
  [22-03-30 18:01:24:011 EDT] [Leader of Event, LIST, 1530840349]
  [22-03-30 18:01:24:059 EDT] [Secondary Leader(s), CHECKBOX, 946219638]
  [22-03-30 18:01:24:110 EDT] [Attendees, CHECKBOX, 1867217977]
  [22-03-30 18:01:24:158 EDT] [Include more members?, MULTIPLE_CHOICE, 280242667]
  
  [22-03-30 18:01:24:204 EDT] [Special Group 04, PAGE_BREAK, 727840379]
  [22-03-30 18:01:24:251 EDT] [Leader of Event, LIST, 12704252]
  [22-03-30 18:01:24:295 EDT] [Secondary Leader(s), CHECKBOX, 281854663]
  [22-03-30 18:01:24:340 EDT] [Attendees, CHECKBOX, 1896267481]
  [22-03-30 18:01:24:385 EDT] [Include more members?, MULTIPLE_CHOICE, 773653334]
  
  [22-03-30 18:01:24:429 EDT] [Special Group 05, PAGE_BREAK, 115166199]
  [22-03-30 18:01:24:472 EDT] [Leader of Event, LIST, 1675891358]
  [22-03-30 18:01:24:514 EDT] [Secondary Leader(s), CHECKBOX, 851352428]
  [22-03-30 18:01:24:557 EDT] [Attendees, CHECKBOX, 765837832]
  [22-03-30 18:01:24:598 EDT] [Include more members?, MULTIPLE_CHOICE, 623277258]
  
  [22-03-30 18:01:24:643 EDT] [Special Group 06, PAGE_BREAK, 2131910812]
  [22-03-30 18:01:24:689 EDT] [Leader of Event, LIST, 1269842963]
  [22-03-30 18:01:24:731 EDT] [Secondary Leader(s), CHECKBOX, 712257148]
  [22-03-30 18:01:24:772 EDT] [Attendees, CHECKBOX, 220077397]
  [22-03-30 18:01:24:814 EDT] [Include more members?, MULTIPLE_CHOICE, 135724249]
  
  [22-03-30 18:01:24:855 EDT] [Special Group 07, PAGE_BREAK, 942345642]
  [22-03-30 18:01:24:900 EDT] [Leader of Event, LIST, 1369847497]
  [22-03-30 18:01:24:942 EDT] [Secondary Leader(s), CHECKBOX, 1957942028]
  [22-03-30 18:01:24:984 EDT] [Attendees, CHECKBOX, 930102128]
  [22-03-30 18:01:25:033 EDT] [Include more members?, MULTIPLE_CHOICE, 881981399]
  
  [22-03-30 18:01:25:075 EDT] [Special Group 08, PAGE_BREAK, 285848394]
  [22-03-30 18:01:25:116 EDT] [Leader of Event, LIST, 1609455201]
  [22-03-30 18:01:25:159 EDT] [Secondary Leader(s), CHECKBOX, 1937959163]
  [22-03-30 18:01:25:199 EDT] [Attendees, CHECKBOX, 1182997706]
  [22-03-30 18:01:25:239 EDT] [Include more members?, MULTIPLE_CHOICE, 1199037007]
  */
  
  
}//end formListUpdate